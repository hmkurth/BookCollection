[DEBUG] 2021-03-01 16:18:39.917 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-01 16:18:39.939 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-01 16:18:39.955 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-01 16:18:40.398 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-01 16:18:40.409 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-01 16:18:41.101 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-03-01 16:18:41.103 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-03-01 16:18:41.118 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-01 16:18:41.869 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-01 16:18:41.929 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-01 16:18:41.930 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-01 16:18:41.970 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-01 16:18:42.156 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@783efb48
[DEBUG] 2021-03-01 16:18:42.157 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@783efb48
[DEBUG] 2021-03-01 16:18:42.157 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@783efb48
[DEBUG] 2021-03-01 16:18:42.158 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3af356f
[DEBUG] 2021-03-01 16:18:42.158 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b0b4d53
[DEBUG] 2021-03-01 16:18:42.159 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@303a5119
[DEBUG] 2021-03-01 16:18:42.160 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@12db3386
[DEBUG] 2021-03-01 16:18:42.160 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@12db3386
[DEBUG] 2021-03-01 16:18:42.160 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12db3386
[DEBUG] 2021-03-01 16:18:42.161 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@425d5d46
[DEBUG] 2021-03-01 16:18:42.163 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@425d5d46
[DEBUG] 2021-03-01 16:18:42.164 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@425d5d46
[DEBUG] 2021-03-01 16:18:42.166 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a49fe
[DEBUG] 2021-03-01 16:18:42.167 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a49fe
[DEBUG] 2021-03-01 16:18:42.167 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a49fe
[DEBUG] 2021-03-01 16:18:42.168 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bef452c
[DEBUG] 2021-03-01 16:18:42.168 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bef452c
[DEBUG] 2021-03-01 16:18:42.170 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bef452c
[DEBUG] 2021-03-01 16:18:42.171 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@417d6615
[DEBUG] 2021-03-01 16:18:42.174 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@417d6615
[DEBUG] 2021-03-01 16:18:42.174 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@417d6615
[DEBUG] 2021-03-01 16:18:42.176 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c89bb12
[DEBUG] 2021-03-01 16:18:42.176 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c89bb12
[DEBUG] 2021-03-01 16:18:42.176 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c89bb12
[DEBUG] 2021-03-01 16:18:42.178 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5c92166b
[DEBUG] 2021-03-01 16:18:42.178 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5c92166b
[DEBUG] 2021-03-01 16:18:42.178 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c92166b
[DEBUG] 2021-03-01 16:18:42.179 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@267517e4
[DEBUG] 2021-03-01 16:18:42.180 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@267517e4
[DEBUG] 2021-03-01 16:18:42.181 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b2a30d
[DEBUG] 2021-03-01 16:18:42.181 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b2a30d
[DEBUG] 2021-03-01 16:18:42.182 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3a91d146
[DEBUG] 2021-03-01 16:18:42.183 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a91d146
[DEBUG] 2021-03-01 16:18:42.183 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6d4a65c6
[DEBUG] 2021-03-01 16:18:42.184 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f02251
[DEBUG] 2021-03-01 16:18:42.185 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@53692008
[DEBUG] 2021-03-01 16:18:42.185 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53692008
[DEBUG] 2021-03-01 16:18:42.186 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@27b71f50
[DEBUG] 2021-03-01 16:18:42.187 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@27b71f50
[DEBUG] 2021-03-01 16:18:42.197 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4a9486c0
[DEBUG] 2021-03-01 16:18:42.198 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a9486c0
[DEBUG] 2021-03-01 16:18:42.205 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cf8edcf
[DEBUG] 2021-03-01 16:18:42.206 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cf8edcf
[DEBUG] 2021-03-01 16:18:42.207 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3a627c80
[DEBUG] 2021-03-01 16:18:42.207 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3a627c80
[DEBUG] 2021-03-01 16:18:42.209 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@989da1
[DEBUG] 2021-03-01 16:18:42.210 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@989da1
[DEBUG] 2021-03-01 16:18:42.215 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@441cc260
[DEBUG] 2021-03-01 16:18:42.215 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@441cc260
[DEBUG] 2021-03-01 16:18:42.224 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@55b8dbda
[DEBUG] 2021-03-01 16:18:42.225 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@55b8dbda
[DEBUG] 2021-03-01 16:18:42.226 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b22b970
[DEBUG] 2021-03-01 16:18:42.227 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b22b970
[DEBUG] 2021-03-01 16:18:42.228 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4158debd
[DEBUG] 2021-03-01 16:18:42.228 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4158debd
[DEBUG] 2021-03-01 16:18:42.230 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@660591fb
[DEBUG] 2021-03-01 16:18:42.230 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@660591fb
[DEBUG] 2021-03-01 16:18:42.232 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ba310d
[DEBUG] 2021-03-01 16:18:42.232 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ba310d
[DEBUG] 2021-03-01 16:18:42.232 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ba310d
[DEBUG] 2021-03-01 16:18:42.235 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@566d0c69
[DEBUG] 2021-03-01 16:18:42.236 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4a7761b1
[DEBUG] 2021-03-01 16:18:42.237 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4a7761b1
[DEBUG] 2021-03-01 16:18:42.237 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4a7761b1
[DEBUG] 2021-03-01 16:18:42.239 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4cdd2c73
[DEBUG] 2021-03-01 16:18:42.243 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37fdfb05
[DEBUG] 2021-03-01 16:18:42.243 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fdfb05
[DEBUG] 2021-03-01 16:18:42.245 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6a10b263
[DEBUG] 2021-03-01 16:18:42.245 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a10b263
[DEBUG] 2021-03-01 16:18:42.246 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@248deced
[DEBUG] 2021-03-01 16:18:42.247 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@248deced
[DEBUG] 2021-03-01 16:18:42.249 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@15fa55a6
[DEBUG] 2021-03-01 16:18:42.250 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15fa55a6
[DEBUG] 2021-03-01 16:18:42.253 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49dbaaf3
[DEBUG] 2021-03-01 16:18:42.253 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49dbaaf3
[DEBUG] 2021-03-01 16:18:42.253 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f443fae
[DEBUG] 2021-03-01 16:18:42.254 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@29f0c4f2
[DEBUG] 2021-03-01 16:18:42.255 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@29f0c4f2
[DEBUG] 2021-03-01 16:18:42.255 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@29f0c4f2
[DEBUG] 2021-03-01 16:18:42.256 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b214b94
[DEBUG] 2021-03-01 16:18:42.256 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b214b94
[DEBUG] 2021-03-01 16:18:42.257 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b214b94
[DEBUG] 2021-03-01 16:18:42.258 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@250b236d
[DEBUG] 2021-03-01 16:18:42.259 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@78de58ea
[DEBUG] 2021-03-01 16:18:42.260 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@60dd3c23
[DEBUG] 2021-03-01 16:18:42.261 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@60dd3c23
[DEBUG] 2021-03-01 16:18:42.261 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@60dd3c23
[DEBUG] 2021-03-01 16:18:42.262 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5bcde458
[DEBUG] 2021-03-01 16:18:42.262 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5bcde458
[DEBUG] 2021-03-01 16:18:42.262 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5bcde458
[DEBUG] 2021-03-01 16:18:42.262 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@10876a6
[DEBUG] 2021-03-01 16:18:42.263 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@706cb08
[DEBUG] 2021-03-01 16:18:42.264 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@19569ebd
[DEBUG] 2021-03-01 16:18:42.265 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19569ebd
[DEBUG] 2021-03-01 16:18:42.265 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b6c624
[DEBUG] 2021-03-01 16:18:42.273 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47d7bfb3
[DEBUG] 2021-03-01 16:18:42.273 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47d7bfb3
[DEBUG] 2021-03-01 16:18:42.275 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@771db12c
[DEBUG] 2021-03-01 16:18:42.275 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@771db12c
[DEBUG] 2021-03-01 16:18:42.275 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c017078
[DEBUG] 2021-03-01 16:18:42.276 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bd16207
[DEBUG] 2021-03-01 16:18:42.285 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@652ce654
[DEBUG] 2021-03-01 16:18:42.289 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b08f438
[DEBUG] 2021-03-01 16:18:42.289 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b08f438
[DEBUG] 2021-03-01 16:18:42.290 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2788d0fe
[DEBUG] 2021-03-01 16:18:42.290 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73ab3aac
[DEBUG] 2021-03-01 16:18:42.291 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54f66455
[DEBUG] 2021-03-01 16:18:42.291 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65ae095c
[DEBUG] 2021-03-01 16:18:42.292 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c03a37
[DEBUG] 2021-03-01 16:18:42.292 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e140e59
[DEBUG] 2021-03-01 16:18:42.292 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49a71302
[DEBUG] 2021-03-01 16:18:42.292 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cd61783
[DEBUG] 2021-03-01 16:18:42.348 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-01 16:18:42.357 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-01 16:18:42.359 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-01 16:18:42.359 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-01 16:18:42.363 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-01 16:18:42.364 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-01 16:18:42.364 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-01 16:18:42.375 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-01 16:18:42.376 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-01 16:18:42.377 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-01 16:18:42.381 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-01 16:18:42.381 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-01 16:18:42.382 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-01 16:18:42.386 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-01 16:18:42.399 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_BookCollection
[INFO ] 2021-03-01 16:18:42.399 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-01 16:18:42.399 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-01 16:18:42.753 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-01 16:18:43.847 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-01 16:18:43.847 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-03-01 16:18:43.847 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-01 16:18:43.953 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-01 16:18:43.995 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-01 16:18:44.061 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-01 16:18:44.157 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-01 16:18:44.163 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20134094] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@76889e60]
[DEBUG] 2021-03-01 16:18:44.270 [main] AnnotationBinder - Binding entity from annotated class: entity.Author
[DEBUG] 2021-03-01 16:18:44.325 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 16:18:44.336 [main] EntityBinder - Import with entity name Author
[DEBUG] 2021-03-01 16:18:44.351 [main] EntityBinder - Bind entity entity.Author on table author
[DEBUG] 2021-03-01 16:18:44.404 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.415 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 16:18:44.417 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
[DEBUG] 2021-03-01 16:18:44.428 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 16:18:44.430 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 16:18:44.442 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 16:18:44.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.443 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-01 16:18:44.444 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:firstName]
[DEBUG] 2021-03-01 16:18:44.444 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-01 16:18:44.445 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-01 16:18:44.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.446 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-01 16:18:44.446 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:lastName]
[DEBUG] 2021-03-01 16:18:44.446 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-01 16:18:44.446 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-01 16:18:44.447 [main] AnnotationBinder - Binding entity from annotated class: entity.Book
[DEBUG] 2021-03-01 16:18:44.452 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 16:18:44.452 [main] EntityBinder - Import with entity name Book
[DEBUG] 2021-03-01 16:18:44.452 [main] EntityBinder - Bind entity entity.Book on table book
[DEBUG] 2021-03-01 16:18:44.462 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.462 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 16:18:44.462 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
[DEBUG] 2021-03-01 16:18:44.462 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 16:18:44.462 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 16:18:44.463 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 16:18:44.464 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-01 16:18:44.464 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.473 [main] PropertyBinder - Building property author
[DEBUG] 2021-03-01 16:18:44.477 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-01 16:18:44.477 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.477 [main] PropertyBinder - Building property genre
[DEBUG] 2021-03-01 16:18:44.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.484 [main] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-03-01 16:18:44.489 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:isbn]
[DEBUG] 2021-03-01 16:18:44.489 [main] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-03-01 16:18:44.490 [main] PropertyBinder - Building property isbn
[DEBUG] 2021-03-01 16:18:44.490 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.492 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-03-01 16:18:44.493 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:title]
[DEBUG] 2021-03-01 16:18:44.495 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-03-01 16:18:44.495 [main] PropertyBinder - Building property title
[DEBUG] 2021-03-01 16:18:44.496 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-01 16:18:44.496 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.500 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-01 16:18:44.502 [main] AnnotationBinder - Binding entity from annotated class: entity.Genre
[DEBUG] 2021-03-01 16:18:44.502 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 16:18:44.503 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2021-03-01 16:18:44.505 [main] EntityBinder - Bind entity entity.Genre on table genre
[DEBUG] 2021-03-01 16:18:44.509 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.509 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 16:18:44.510 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:id]
[DEBUG] 2021-03-01 16:18:44.510 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 16:18:44.510 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 16:18:44.511 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 16:18:44.511 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.512 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-03-01 16:18:44.514 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:name]
[DEBUG] 2021-03-01 16:18:44.514 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-03-01 16:18:44.522 [main] PropertyBinder - Building property name
[DEBUG] 2021-03-01 16:18:44.523 [main] AnnotationBinder - Binding entity from annotated class: entity.User
[DEBUG] 2021-03-01 16:18:44.523 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 16:18:44.523 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-03-01 16:18:44.523 [main] EntityBinder - Bind entity entity.User on table user
[DEBUG] 2021-03-01 16:18:44.526 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.527 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 16:18:44.527 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:id]
[DEBUG] 2021-03-01 16:18:44.527 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 16:18:44.527 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 16:18:44.527 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 16:18:44.527 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.527 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-03-01 16:18:44.528 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:email]
[DEBUG] 2021-03-01 16:18:44.528 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-03-01 16:18:44.528 [main] PropertyBinder - Building property email
[DEBUG] 2021-03-01 16:18:44.528 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.528 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-01 16:18:44.528 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:firstName]
[DEBUG] 2021-03-01 16:18:44.528 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-01 16:18:44.528 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-01 16:18:44.528 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.528 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-01 16:18:44.531 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:lastName]
[DEBUG] 2021-03-01 16:18:44.531 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-01 16:18:44.531 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-01 16:18:44.531 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.531 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-03-01 16:18:44.532 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:password]
[DEBUG] 2021-03-01 16:18:44.532 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-03-01 16:18:44.532 [main] PropertyBinder - Building property password
[DEBUG] 2021-03-01 16:18:44.533 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 16:18:44.533 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-03-01 16:18:44.533 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:userName]
[DEBUG] 2021-03-01 16:18:44.533 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-03-01 16:18:44.533 [main] PropertyBinder - Building property userName
[DEBUG] 2021-03-01 16:18:44.541 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 16:18:44.541 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-01 16:18:44.541 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-01 16:18:44.542 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 16:18:44.543 [main] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-03-01 16:18:44.544 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-03-01 16:18:44.544 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-03-01 16:18:44.545 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-03-01 16:18:44.557 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-03-01 16:18:44.557 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-03-01 16:18:44.557 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-03-01 16:18:44.557 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-03-01 16:18:44.557 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-01 16:18:44.559 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-01 16:18:44.559 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-01 16:18:44.565 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-01 16:18:44.565 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-01 16:18:44.565 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-01 16:18:44.635 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-01 16:18:44.639 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-01 16:18:44.639 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-01 16:18:44.639 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-01 16:18:44.639 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-01 16:18:44.640 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-01 16:18:44.640 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-01 16:18:44.640 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-01 16:18:44.640 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-01 16:18:44.640 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-01 16:18:44.641 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-01 16:18:44.646 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-01 16:18:44.646 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-01 16:18:44.646 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-01 16:18:44.646 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-01 16:18:44.647 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-01 16:18:44.739 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-01 16:18:44.794 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-01 16:18:44.794 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/BookCollection/target/test-classes:/home/student/IdeaProjects/BookCollection/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/home/student/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/home/student/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/student/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/student/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket45883, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-01-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-66-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_BookCollection, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.10, user.dir=/home/student/IdeaProjects/BookCollection, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68ee3b6d, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_BookCollection, java.class.version=55.0}
[DEBUG] 2021-03-01 16:18:44.825 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-01 16:18:44.825 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-01 16:18:44.826 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-01 16:18:44.826 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20134094] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2dfb885e]
[DEBUG] 2021-03-01 16:18:44.968 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-01 16:18:44.971 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-01 16:18:45.009 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-01 16:18:45.013 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-01 16:18:45.513 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-01 16:18:45.513 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-01 16:18:45.513 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-01 16:18:45.513 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-01 16:18:45.543 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-01 16:18:45.543 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-01 16:18:45.543 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-01 16:18:45.543 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-01 16:18:45.598 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-01 16:18:45.598 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-01 16:18:45.609 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-01 16:18:45.609 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-01 16:18:45.673 [main] AbstractEntityPersister - Static SQL for entity: entity.User
[DEBUG] 2021-03-01 16:18:45.673 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-03-01 16:18:45.673 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_3_, user_.first_name as first_na3_3_, user_.last_name as last_nam4_3_, user_.password as password5_3_, user_.username as username6_3_ from user user_ where user_.id=?
[DEBUG] 2021-03-01 16:18:45.673 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 16:18:45.673 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-03-01 16:18:45.674 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-03-01 16:18:45.674 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 16:18:45.717 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2276c9]
[DEBUG] 2021-03-01 16:18:45.718 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-01 16:18:45.718 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 16:18:45.718 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 16:18:45.718 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-01 16:18:45.718 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-01 16:18:45.718 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.744 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.752 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-01 16:18:45.758 [main] EntityLoader - Static select for entity entity.User [NONE]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:45.764 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af4955e]
[DEBUG] 2021-03-01 16:18:45.765 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-01 16:18:45.765 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 16:18:45.765 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 16:18:45.765 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-01 16:18:45.765 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-01 16:18:45.765 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.765 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.766 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-01 16:18:45.766 [main] EntityLoader - Static select for entity entity.User [READ]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:45.793 [main] Loader - Static select for action ACTION_MERGE on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:45.794 [main] Loader - Static select for action ACTION_REFRESH on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister - Static SQL for entity: entity.Genre
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-03-01 16:18:45.794 [main] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-03-01 16:18:45.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12417468]
[DEBUG] 2021-03-01 16:18:45.795 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-01 16:18:45.795 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.795 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.797 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-01 16:18:45.798 [main] EntityLoader - Static select for entity entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:45.802 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d325518]
[DEBUG] 2021-03-01 16:18:45.803 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-01 16:18:45.803 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.805 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.807 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-01 16:18:45.807 [main] EntityLoader - Static select for entity entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:45.807 [main] Loader - Static select for action ACTION_MERGE on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:45.808 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister - Static SQL for entity: entity.Author
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-03-01 16:18:45.808 [main] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-01 16:18:45.808 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2233cac0]
[DEBUG] 2021-03-01 16:18:45.808 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 16:18:45.808 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 16:18:45.808 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.808 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.809 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-01 16:18:45.809 [main] EntityLoader - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:45.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787e4357]
[DEBUG] 2021-03-01 16:18:45.809 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 16:18:45.809 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 16:18:45.809 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.814 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.815 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-01 16:18:45.815 [main] EntityLoader - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:45.815 [main] Loader - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:45.815 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister - Static SQL for entity: entity.Book
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i4_1_, book_.genre_id as genre_id5_1_, book_.isbn as isbn2_1_, book_.title as title3_1_, book_.user_id as user_id6_1_ from book book_ where book_.id=?
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, title, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, title=?, user_id=? where id=?
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-03-01 16:18:45.816 [main] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, title, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 16:18:45.816 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fcbc766]
[DEBUG] 2021-03-01 16:18:45.816 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-01 16:18:45.830 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b626e5]
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-01 16:18:45.832 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1ccaaf]
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-01 16:18:45.832 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-01 16:18:45.832 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc053]
[DEBUG] 2021-03-01 16:18:45.833 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-01 16:18:45.833 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-01 16:18:45.834 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-01 16:18:45.834 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-01 16:18:45.834 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-01 16:18:45.834 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.835 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.839 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-01 16:18:45.840 [main] EntityLoader - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-01 16:18:45.841 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a38f122]
[DEBUG] 2021-03-01 16:18:45.843 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-01 16:18:45.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c628f6a]
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-01 16:18:45.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@747835f5]
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-01 16:18:45.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d0ec6f]
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-01 16:18:45.844 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-01 16:18:45.845 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 16:18:45.849 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 16:18:45.850 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-01 16:18:45.851 [main] EntityLoader - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-01 16:18:45.852 [main] Loader - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-01 16:18:45.853 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-01 16:18:45.915 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-01 16:18:45.916 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-01 16:18:45.916 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-01 16:18:45.932 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-01 16:18:45.933 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-01 16:18:45.935 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-01 16:18:45.935 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-01 16:18:45.937 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4f820f42
[DEBUG] 2021-03-01 16:18:45.945 [main] SessionFactoryRegistry - Registering SessionFactory: f7fbdd04-9960-4e4b-99c9-02b4542ba5f4 (<unnamed>)
[DEBUG] 2021-03-01 16:18:45.946 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-01 16:18:46.207 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-01 16:18:46.227 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-01 16:18:46.233 [main] TransactionImpl - begin
[DEBUG] 2021-03-01 16:18:46.264 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-01 16:18:46.276 [main] SQL - insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-01 16:18:46.312 [main] IdentifierGeneratorHelper - Natively generated identity: 30
[DEBUG] 2021-03-01 16:18:46.312 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:46.317 [main] TransactionImpl - committing
[DEBUG] 2021-03-01 16:18:46.317 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-01 16:18:46.319 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-01 16:18:46.325 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-01 16:18:46.326 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-01 16:18:46.327 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-01 16:18:46.327 [main] EntityPrinter - entity.Author{firstName=Kiera, lastName=Cass, id=30}
[DEBUG] 2021-03-01 16:18:46.336 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:46.339 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:46.369 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:46.382 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:46.382 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:46.389 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#30]
[DEBUG] 2021-03-01 16:18:46.389 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kiera
[DEBUG] 2021-03-01 16:18:46.389 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.393 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Cass
[DEBUG] 2021-03-01 16:18:46.393 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.394 [main] TwoPhaseLoad - Done materializing entity [entity.Author#30]
[DEBUG] 2021-03-01 16:18:46.394 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:46.394 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#30
[DEBUG] 2021-03-01 16:18:46.394 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:46.538 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:46.542 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:46.543 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:46.543 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 16:18:46.543 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 16:18:46.543 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.543 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 16:18:46.543 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.543 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 16:18:46.543 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:46.543 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-01 16:18:46.543 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:46.725 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-03-01 16:18:46.743 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@22791b75
[DEBUG] 2021-03-01 16:18:46.796 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0
[DEBUG] 2021-03-01 16:18:46.817 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:46.835 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-01 16:18:46.884 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:46.919 [main] FromElement - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-01 16:18:46.921 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 16:18:46.923 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:46.927 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2021-03-01 16:18:46.943 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-01 16:18:46.944 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:46.949 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}

[DEBUG] 2021-03-01 16:18:46.949 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:46.960 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Author as generatedAlias0
[DEBUG] 2021-03-01 16:18:46.960 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2021-03-01 16:18:46.960 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:46.976 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2021-03-01 16:18:46.983 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 16:18:46.989 [main] Loader - Result row: EntityKey[entity.Author#1]
[DEBUG] 2021-03-01 16:18:46.989 [main] Loader - Result set row: 1
[DEBUG] 2021-03-01 16:18:46.990 [main] Loader - Result row: EntityKey[entity.Author#2]
[DEBUG] 2021-03-01 16:18:46.990 [main] Loader - Result set row: 2
[DEBUG] 2021-03-01 16:18:46.990 [main] Loader - Result row: EntityKey[entity.Author#3]
[DEBUG] 2021-03-01 16:18:46.990 [main] Loader - Result set row: 3
[DEBUG] 2021-03-01 16:18:46.993 [main] Loader - Result row: EntityKey[entity.Author#4]
[DEBUG] 2021-03-01 16:18:46.993 [main] Loader - Result set row: 4
[DEBUG] 2021-03-01 16:18:46.993 [main] Loader - Result row: EntityKey[entity.Author#5]
[DEBUG] 2021-03-01 16:18:46.993 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 16:18:46.993 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 16:18:46.993 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.993 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 16:18:46.993 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.995 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#2]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Done materializing entity [entity.Author#2]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#4]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Done materializing entity [entity.Author#4]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#5]
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.996 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-01 16:18:46.997 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:46.997 [main] TwoPhaseLoad - Done materializing entity [entity.Author#5]
[DEBUG] 2021-03-01 16:18:46.998 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.184 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:47.190 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:47.190 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:47.192 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.192 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-01 16:18:47.192 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.192 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-01 16:18:47.192 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.192 [main] TwoPhaseLoad - Done materializing entity [entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.192 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:47.195 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#2
[DEBUG] 2021-03-01 16:18:47.195 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.196 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-01 16:18:47.196 [main] TransactionImpl - begin
[DEBUG] 2021-03-01 16:18:47.205 [main] TransactionImpl - committing
[DEBUG] 2021-03-01 16:18:47.205 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-01 16:18:47.205 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-01 16:18:47.209 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-01 16:18:47.209 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-01 16:18:47.209 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-01 16:18:47.210 [main] EntityPrinter - entity.Author{firstName=Cassandra, lastName=Smith, id=2}
[DEBUG] 2021-03-01 16:18:47.216 [main] SQL - update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-01 16:18:47.224 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.226 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.226 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:47.232 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:47.233 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:47.235 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.235 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-01 16:18:47.236 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.236 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Smith
[DEBUG] 2021-03-01 16:18:47.236 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.236 [main] TwoPhaseLoad - Done materializing entity [entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.236 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:47.236 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#2
[DEBUG] 2021-03-01 16:18:47.236 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.418 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2021-03-01 16:18:47.421 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2021-03-01 16:18:47.425 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:47.429 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-01 16:18:47.429 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:47.431 [main] FromElement - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-01 16:18:47.431 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 16:18:47.432 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 16:18:47.433 [main] DotNode - getDataType() : firstName -> org.hibernate.type.StringType@3a91d146
[DEBUG] 2021-03-01 16:18:47.439 [main] FromReferenceNode - Resolved : generatedAlias0.firstName -> author0_.first_name
[DEBUG] 2021-03-01 16:18:47.441 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:47.442 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) ( where ( like ( author0_.first_name author0_.id firstName ) ? ) ) )
[DEBUG] 2021-03-01 16:18:47.442 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-01 16:18:47.442 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:47.442 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'author0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=author0_,className=entity.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3a91d146}

[DEBUG] 2021-03-01 16:18:47.442 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:47.442 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Author as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2021-03-01 16:18:47.442 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.first_name like ?
[DEBUG] 2021-03-01 16:18:47.442 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:47.449 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.first_name like ?
[DEBUG] 2021-03-01 16:18:47.454 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 16:18:47.454 [main] Loader - Result row: EntityKey[entity.Author#1]
[DEBUG] 2021-03-01 16:18:47.457 [main] Loader - Result set row: 1
[DEBUG] 2021-03-01 16:18:47.457 [main] Loader - Result row: EntityKey[entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.458 [main] Loader - Result set row: 2
[DEBUG] 2021-03-01 16:18:47.459 [main] Loader - Result row: EntityKey[entity.Author#3]
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-01 16:18:47.459 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Done materializing entity [entity.Author#2]
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-01 16:18:47.462 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.463 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-01 16:18:47.463 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.633 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-01 16:18:47.634 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-01 16:18:47.637 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:47.639 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-01 16:18:47.639 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:47.639 [main] FromElement - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-01 16:18:47.639 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 16:18:47.639 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 16:18:47.641 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@3a91d146
[DEBUG] 2021-03-01 16:18:47.641 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> author0_.last_name
[DEBUG] 2021-03-01 16:18:47.642 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:47.642 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) ( where ( like ( author0_.last_name author0_.id lastName ) ? ) ) )
[DEBUG] 2021-03-01 16:18:47.643 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-01 16:18:47.643 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:47.644 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'author0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=author0_,className=entity.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3a91d146}

[DEBUG] 2021-03-01 16:18:47.644 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:47.644 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-01 16:18:47.644 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.last_name like ?
[DEBUG] 2021-03-01 16:18:47.644 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:47.644 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.last_name like ?
[DEBUG] 2021-03-01 16:18:47.653 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 16:18:47.653 [main] Loader - Result row: EntityKey[entity.Author#1]
[DEBUG] 2021-03-01 16:18:47.656 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 16:18:47.656 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 16:18:47.656 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.656 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 16:18:47.657 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.657 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 16:18:47.657 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.833 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:47.837 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:47.837 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:47.838 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-01 16:18:47.838 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-01 16:18:47.838 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.838 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-01 16:18:47.838 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:47.838 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-01 16:18:47.838 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:47.838 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#3
[DEBUG] 2021-03-01 16:18:47.838 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.841 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-01 16:18:47.841 [main] TransactionImpl - begin
[DEBUG] 2021-03-01 16:18:47.848 [main] TransactionImpl - committing
[DEBUG] 2021-03-01 16:18:47.848 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-01 16:18:47.848 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-01 16:18:47.848 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-01 16:18:47.849 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-01 16:18:47.849 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-01 16:18:47.849 [main] EntityPrinter - entity.Author{firstName=Stephen, lastName=King, id=3}
[DEBUG] 2021-03-01 16:18:47.856 [main] SQL - delete from author where id=?
[DEBUG] 2021-03-01 16:18:47.867 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.868 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:47.869 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-01 16:18:47.869 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:47.872 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:47.872 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#3
[DEBUG] 2021-03-01 16:18:47.872 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:48.040 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2021-03-01 16:18:48.045 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0
[DEBUG] 2021-03-01 16:18:48.046 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:48.046 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-01 16:18:48.046 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:48.052 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-01 16:18:48.052 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-01 16:18:48.052 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:48.053 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) )
[DEBUG] 2021-03-01 16:18:48.054 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-01 16:18:48.054 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:48.054 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}

[DEBUG] 2021-03-01 16:18:48.054 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:48.054 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0
[DEBUG] 2021-03-01 16:18:48.054 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-01 16:18:48.054 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:48.055 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-01 16:18:48.061 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 16:18:48.062 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-01 16:18:48.062 [main] Loader - Result set row: 1
[DEBUG] 2021-03-01 16:18:48.062 [main] Loader - Result row: EntityKey[entity.Book#2]
[DEBUG] 2021-03-01 16:18:48.062 [main] Loader - Result set row: 2
[DEBUG] 2021-03-01 16:18:48.062 [main] Loader - Result row: EntityKey[entity.Book#3]
[DEBUG] 2021-03-01 16:18:48.062 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-01 16:18:48.062 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-01 16:18:48.062 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.063 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:48.069 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.071 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.074 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 16:18:48.074 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 16:18:48.074 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.074 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 16:18:48.074 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.074 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 16:18:48.074 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.075 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-01 16:18:48.077 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-01 16:18:48.077 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.077 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:48.079 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.079 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-01 16:18:48.079 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.079 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-01 16:18:48.079 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.080 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-01 16:18:48.080 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.080 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:48.084 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.084 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.085 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-01 16:18:48.085 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-01 16:18:48.085 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.091 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-01 16:18:48.093 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.093 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-01 16:18:48.093 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.093 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-01 16:18:48.094 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.094 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#2]
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Processing attribute `author` : value = 4
[DEBUG] 2021-03-01 16:18:48.094 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.094 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:48.096 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.097 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.097 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#4]
[DEBUG] 2021-03-01 16:18:48.097 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-01 16:18:48.097 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.097 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-01 16:18:48.097 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.097 [main] TwoPhaseLoad - Done materializing entity [entity.Author#4]
[DEBUG] 2021-03-01 16:18:48.098 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.098 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#4
[DEBUG] 2021-03-01 16:18:48.098 [main] TwoPhaseLoad - Processing attribute `genre` : value = 2
[DEBUG] 2021-03-01 16:18:48.098 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.098 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:48.101 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.101 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#2]
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Processing attribute `name` : value = Science Fiction
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#2]
[DEBUG] 2021-03-01 16:18:48.108 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.108 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#2
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0765365279
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Processing attribute `title` : value = The Way of Kings
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.108 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-01 16:18:48.109 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.109 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:48.110 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.111 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Resolving attributes for [entity.User#4]
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.111 [main] TwoPhaseLoad - Done materializing entity [entity.User#4]
[DEBUG] 2021-03-01 16:18:48.111 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.111 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#4
[DEBUG] 2021-03-01 16:18:48.112 [main] TwoPhaseLoad - Done materializing entity [entity.Book#2]
[DEBUG] 2021-03-01 16:18:48.112 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#3]
[DEBUG] 2021-03-01 16:18:48.112 [main] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-03-01 16:18:48.112 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.112 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:48.113 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.113 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.114 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#5]
[DEBUG] 2021-03-01 16:18:48.114 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-01 16:18:48.114 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.114 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-01 16:18:48.114 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.115 [main] TwoPhaseLoad - Done materializing entity [entity.Author#5]
[DEBUG] 2021-03-01 16:18:48.115 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.115 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#5
[DEBUG] 2021-03-01 16:18:48.115 [main] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-03-01 16:18:48.115 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.117 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:48.119 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.121 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#5]
[DEBUG] 2021-03-01 16:18:48.121 [main] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-03-01 16:18:48.121 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#5]
[DEBUG] 2021-03-01 16:18:48.124 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.124 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#5
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0425259856
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-01 16:18:48.124 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.125 [main] TwoPhaseLoad - Done materializing entity [entity.Book#3]
[DEBUG] 2021-03-01 16:18:48.125 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 16:18:48.261 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-01 16:18:48.262 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-01 16:18:48.264 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:48.265 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-01 16:18:48.265 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:48.265 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-01 16:18:48.266 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-01 16:18:48.267 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-01 16:18:48.267 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@3a91d146
[DEBUG] 2021-03-01 16:18:48.267 [main] FromReferenceNode - Resolved : generatedAlias0.title -> book0_.title
[DEBUG] 2021-03-01 16:18:48.267 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:48.267 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
[DEBUG] 2021-03-01 16:18:48.268 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-01 16:18:48.268 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 16:18:48.268 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3a91d146}

[DEBUG] 2021-03-01 16:18:48.268 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:48.268 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-01 16:18:48.268 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-01 16:18:48.268 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 16:18:48.269 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-01 16:18:48.273 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 16:18:48.274 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-01 16:18:48.274 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-01 16:18:48.274 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-01 16:18:48.274 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.274 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 16:18:48.277 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.277 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.279 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 16:18:48.279 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 16:18:48.279 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.279 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 16:18:48.279 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.280 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 16:18:48.280 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.280 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-01 16:18:48.281 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-01 16:18:48.281 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.282 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 16:18:48.284 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.284 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.284 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-01 16:18:48.284 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-01 16:18:48.284 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.284 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-01 16:18:48.285 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.285 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-01 16:18:48.285 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-01 16:18:48.285 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.285 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-01 16:18:48.285 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.285 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-01 16:18:48.285 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.288 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 16:18:48.290 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-01 16:18:48.290 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.290 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-01 16:18:48.291 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 16:18:48.291 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-01 16:18:48.291 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-01 16:18:48.291 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-01 16:18:48.291 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-01 16:18:48.293 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
