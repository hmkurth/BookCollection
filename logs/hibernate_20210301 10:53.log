[DEBUG] 2021-03-01 10:52:50.541 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-01 10:52:50.675 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-01 10:52:50.699 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-01 10:52:51.352 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-01 10:52:51.364 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-01 10:52:52.788 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-03-01 10:52:52.790 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-03-01 10:52:52.855 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-01 10:52:54.998 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-01 10:52:55.101 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-01 10:52:55.106 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-01 10:52:55.253 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-01 10:52:55.376 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5183d589
[DEBUG] 2021-03-01 10:52:55.384 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5183d589
[DEBUG] 2021-03-01 10:52:55.384 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5183d589
[DEBUG] 2021-03-01 10:52:55.385 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@68e62ca4
[DEBUG] 2021-03-01 10:52:55.386 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11653e3b
[DEBUG] 2021-03-01 10:52:55.386 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@16fe9c29
[DEBUG] 2021-03-01 10:52:55.394 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7808fb9
[DEBUG] 2021-03-01 10:52:55.395 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7808fb9
[DEBUG] 2021-03-01 10:52:55.395 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7808fb9
[DEBUG] 2021-03-01 10:52:55.396 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@a567e72
[DEBUG] 2021-03-01 10:52:55.397 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@a567e72
[DEBUG] 2021-03-01 10:52:55.397 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a567e72
[DEBUG] 2021-03-01 10:52:55.398 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@cda0432
[DEBUG] 2021-03-01 10:52:55.398 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@cda0432
[DEBUG] 2021-03-01 10:52:55.398 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@cda0432
[DEBUG] 2021-03-01 10:52:55.410 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@baf1bb3
[DEBUG] 2021-03-01 10:52:55.411 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@baf1bb3
[DEBUG] 2021-03-01 10:52:55.411 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@baf1bb3
[DEBUG] 2021-03-01 10:52:55.412 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ddf20fd
[DEBUG] 2021-03-01 10:52:55.412 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ddf20fd
[DEBUG] 2021-03-01 10:52:55.412 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ddf20fd
[DEBUG] 2021-03-01 10:52:55.413 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@40021799
[DEBUG] 2021-03-01 10:52:55.414 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@40021799
[DEBUG] 2021-03-01 10:52:55.414 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40021799
[DEBUG] 2021-03-01 10:52:55.432 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@264c5d07
[DEBUG] 2021-03-01 10:52:55.432 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@264c5d07
[DEBUG] 2021-03-01 10:52:55.442 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@264c5d07
[DEBUG] 2021-03-01 10:52:55.446 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e742e4
[DEBUG] 2021-03-01 10:52:55.447 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e742e4
[DEBUG] 2021-03-01 10:52:55.448 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dab9dd6
[DEBUG] 2021-03-01 10:52:55.451 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dab9dd6
[DEBUG] 2021-03-01 10:52:55.452 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2f879bab
[DEBUG] 2021-03-01 10:52:55.458 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2f879bab
[DEBUG] 2021-03-01 10:52:55.459 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@458544e0
[DEBUG] 2021-03-01 10:52:55.483 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@72ed9aad
[DEBUG] 2021-03-01 10:52:55.490 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@18a645fd
[DEBUG] 2021-03-01 10:52:55.491 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@18a645fd
[DEBUG] 2021-03-01 10:52:55.492 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@bdecc21
[DEBUG] 2021-03-01 10:52:55.492 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@bdecc21
[DEBUG] 2021-03-01 10:52:55.526 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4aac85fa
[DEBUG] 2021-03-01 10:52:55.530 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4aac85fa
[DEBUG] 2021-03-01 10:52:55.532 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5226e402
[DEBUG] 2021-03-01 10:52:55.532 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5226e402
[DEBUG] 2021-03-01 10:52:55.539 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43cf6ea3
[DEBUG] 2021-03-01 10:52:55.540 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43cf6ea3
[DEBUG] 2021-03-01 10:52:55.544 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3241713e
[DEBUG] 2021-03-01 10:52:55.544 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3241713e
[DEBUG] 2021-03-01 10:52:55.548 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60723d6a
[DEBUG] 2021-03-01 10:52:55.553 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60723d6a
[DEBUG] 2021-03-01 10:52:55.564 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9a7a808
[DEBUG] 2021-03-01 10:52:55.565 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9a7a808
[DEBUG] 2021-03-01 10:52:55.572 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30135202
[DEBUG] 2021-03-01 10:52:55.573 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30135202
[DEBUG] 2021-03-01 10:52:55.575 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@16c3ca31
[DEBUG] 2021-03-01 10:52:55.576 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@16c3ca31
[DEBUG] 2021-03-01 10:52:55.583 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6b1e7ad3
[DEBUG] 2021-03-01 10:52:55.583 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b1e7ad3
[DEBUG] 2021-03-01 10:52:55.591 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fcc0416
[DEBUG] 2021-03-01 10:52:55.592 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fcc0416
[DEBUG] 2021-03-01 10:52:55.598 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fcc0416
[DEBUG] 2021-03-01 10:52:55.600 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@749f539e
[DEBUG] 2021-03-01 10:52:55.601 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6a969fb8
[DEBUG] 2021-03-01 10:52:55.601 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a969fb8
[DEBUG] 2021-03-01 10:52:55.616 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a969fb8
[DEBUG] 2021-03-01 10:52:55.622 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@bb095
[DEBUG] 2021-03-01 10:52:55.630 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5f14a673
[DEBUG] 2021-03-01 10:52:55.631 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f14a673
[DEBUG] 2021-03-01 10:52:55.632 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7a799159
[DEBUG] 2021-03-01 10:52:55.633 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a799159
[DEBUG] 2021-03-01 10:52:55.634 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77ee25f1
[DEBUG] 2021-03-01 10:52:55.634 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77ee25f1
[DEBUG] 2021-03-01 10:52:55.639 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6b3871d6
[DEBUG] 2021-03-01 10:52:55.640 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b3871d6
[DEBUG] 2021-03-01 10:52:55.655 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7578e06a
[DEBUG] 2021-03-01 10:52:55.655 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7578e06a
[DEBUG] 2021-03-01 10:52:55.656 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11a7ba62
[DEBUG] 2021-03-01 10:52:55.657 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7b208b45
[DEBUG] 2021-03-01 10:52:55.663 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7b208b45
[DEBUG] 2021-03-01 10:52:55.664 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7b208b45
[DEBUG] 2021-03-01 10:52:55.665 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e8e8621
[DEBUG] 2021-03-01 10:52:55.665 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e8e8621
[DEBUG] 2021-03-01 10:52:55.665 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e8e8621
[DEBUG] 2021-03-01 10:52:55.667 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7068f7ca
[DEBUG] 2021-03-01 10:52:55.674 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@75b3673
[DEBUG] 2021-03-01 10:52:55.686 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@12db3386
[DEBUG] 2021-03-01 10:52:55.687 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@12db3386
[DEBUG] 2021-03-01 10:52:55.687 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@12db3386
[DEBUG] 2021-03-01 10:52:55.691 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@425d5d46
[DEBUG] 2021-03-01 10:52:55.691 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@425d5d46
[DEBUG] 2021-03-01 10:52:55.692 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@425d5d46
[DEBUG] 2021-03-01 10:52:55.695 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7a639ec5
[DEBUG] 2021-03-01 10:52:55.697 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@66596a88
[DEBUG] 2021-03-01 10:52:55.700 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4bee18dc
[DEBUG] 2021-03-01 10:52:55.705 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4bee18dc
[DEBUG] 2021-03-01 10:52:55.711 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a6ebe1e
[DEBUG] 2021-03-01 10:52:55.717 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8a62297
[DEBUG] 2021-03-01 10:52:55.729 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8a62297
[DEBUG] 2021-03-01 10:52:55.731 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@267517e4
[DEBUG] 2021-03-01 10:52:55.731 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@267517e4
[DEBUG] 2021-03-01 10:52:55.732 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@614aeccc
[DEBUG] 2021-03-01 10:52:55.732 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@322803db
[DEBUG] 2021-03-01 10:52:55.733 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d4a65c6
[DEBUG] 2021-03-01 10:52:55.746 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@74971ed9
[DEBUG] 2021-03-01 10:52:55.755 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74971ed9
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4455f57d
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29fc1a2b
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d0b0fd4
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a24eb3
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c37bd27
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25d3cfc8
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30331109
[DEBUG] 2021-03-01 10:52:55.804 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2571066a
[DEBUG] 2021-03-01 10:52:55.883 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-01 10:52:55.885 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-01 10:52:55.887 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-01 10:52:55.889 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-01 10:52:55.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-01 10:52:55.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-01 10:52:55.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-01 10:52:55.898 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-01 10:52:55.898 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-01 10:52:55.899 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-01 10:52:55.907 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-01 10:52:55.907 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-01 10:52:55.907 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-01 10:52:55.908 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-01 10:52:55.917 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_BookCollection
[INFO ] 2021-03-01 10:52:55.918 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-01 10:52:55.918 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-01 10:52:56.496 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-01 10:52:58.498 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-01 10:52:58.501 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-03-01 10:52:58.501 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-01 10:52:58.716 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-01 10:52:58.885 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-01 10:52:59.018 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-01 10:52:59.308 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-01 10:52:59.329 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76ddd61a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f92a84e]
[DEBUG] 2021-03-01 10:52:59.465 [main] AnnotationBinder - Binding entity from annotated class: entity.Author
[DEBUG] 2021-03-01 10:52:59.530 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 10:52:59.543 [main] EntityBinder - Import with entity name Author
[DEBUG] 2021-03-01 10:52:59.548 [main] EntityBinder - Bind entity entity.Author on table author
[DEBUG] 2021-03-01 10:52:59.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.604 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 10:52:59.611 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
[DEBUG] 2021-03-01 10:52:59.618 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 10:52:59.626 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 10:52:59.631 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 10:52:59.635 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.636 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-01 10:52:59.638 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:firstName]
[DEBUG] 2021-03-01 10:52:59.642 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-01 10:52:59.642 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-01 10:52:59.643 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.643 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-01 10:52:59.644 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:lastName]
[DEBUG] 2021-03-01 10:52:59.644 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-01 10:52:59.644 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-01 10:52:59.667 [main] AnnotationBinder - Binding entity from annotated class: entity.Book
[DEBUG] 2021-03-01 10:52:59.668 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 10:52:59.668 [main] EntityBinder - Import with entity name Book
[DEBUG] 2021-03-01 10:52:59.668 [main] EntityBinder - Bind entity entity.Book on table book
[DEBUG] 2021-03-01 10:52:59.685 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.694 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 10:52:59.694 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
[DEBUG] 2021-03-01 10:52:59.694 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 10:52:59.695 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 10:52:59.695 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 10:52:59.697 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-01 10:52:59.704 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.713 [main] PropertyBinder - Building property author
[DEBUG] 2021-03-01 10:52:59.724 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-01 10:52:59.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.730 [main] PropertyBinder - Building property genre
[DEBUG] 2021-03-01 10:52:59.731 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.731 [main] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-03-01 10:52:59.731 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:isbn]
[DEBUG] 2021-03-01 10:52:59.731 [main] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-03-01 10:52:59.731 [main] PropertyBinder - Building property isbn
[DEBUG] 2021-03-01 10:52:59.731 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.731 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-03-01 10:52:59.731 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:title]
[DEBUG] 2021-03-01 10:52:59.731 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-03-01 10:52:59.733 [main] PropertyBinder - Building property title
[DEBUG] 2021-03-01 10:52:59.733 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-01 10:52:59.734 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.734 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-01 10:52:59.735 [main] AnnotationBinder - Binding entity from annotated class: entity.Genre
[DEBUG] 2021-03-01 10:52:59.736 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 10:52:59.736 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2021-03-01 10:52:59.736 [main] EntityBinder - Bind entity entity.Genre on table genre
[DEBUG] 2021-03-01 10:52:59.745 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.745 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 10:52:59.746 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:id]
[DEBUG] 2021-03-01 10:52:59.755 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 10:52:59.758 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 10:52:59.761 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 10:52:59.769 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.769 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-03-01 10:52:59.769 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:name]
[DEBUG] 2021-03-01 10:52:59.769 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-03-01 10:52:59.769 [main] PropertyBinder - Building property name
[DEBUG] 2021-03-01 10:52:59.769 [main] AnnotationBinder - Binding entity from annotated class: entity.User
[DEBUG] 2021-03-01 10:52:59.770 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-01 10:52:59.780 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-03-01 10:52:59.780 [main] EntityBinder - Bind entity entity.User on table user
[DEBUG] 2021-03-01 10:52:59.806 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.807 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-01 10:52:59.808 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:id]
[DEBUG] 2021-03-01 10:52:59.808 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-01 10:52:59.808 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-01 10:52:59.808 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-01 10:52:59.808 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.809 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-03-01 10:52:59.809 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:email]
[DEBUG] 2021-03-01 10:52:59.810 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-03-01 10:52:59.810 [main] PropertyBinder - Building property email
[DEBUG] 2021-03-01 10:52:59.811 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.811 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-01 10:52:59.811 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:firstName]
[DEBUG] 2021-03-01 10:52:59.811 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-01 10:52:59.811 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-01 10:52:59.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.812 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-01 10:52:59.812 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:lastName]
[DEBUG] 2021-03-01 10:52:59.812 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-01 10:52:59.812 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-01 10:52:59.813 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.822 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-03-01 10:52:59.822 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:password]
[DEBUG] 2021-03-01 10:52:59.822 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-03-01 10:52:59.822 [main] PropertyBinder - Building property password
[DEBUG] 2021-03-01 10:52:59.826 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-01 10:52:59.826 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-03-01 10:52:59.826 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:userName]
[DEBUG] 2021-03-01 10:52:59.827 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-03-01 10:52:59.830 [main] PropertyBinder - Building property userName
[DEBUG] 2021-03-01 10:52:59.835 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 10:52:59.837 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-01 10:52:59.837 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-01 10:52:59.838 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 10:52:59.840 [main] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-03-01 10:52:59.841 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-03-01 10:52:59.882 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-03-01 10:52:59.883 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-03-01 10:52:59.883 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-03-01 10:52:59.883 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-03-01 10:52:59.884 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-01 10:52:59.887 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-01 10:52:59.887 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-01 10:52:59.892 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-01 10:52:59.896 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-01 10:52:59.896 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-01 10:53:00.054 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-01 10:53:00.071 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-01 10:53:00.071 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-01 10:53:00.071 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-01 10:53:00.071 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-01 10:53:00.077 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-01 10:53:00.078 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-01 10:53:00.082 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-01 10:53:00.083 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-01 10:53:00.083 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-01 10:53:00.376 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-01 10:53:00.479 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-01 10:53:00.486 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/BookCollection/target/test-classes:/home/student/IdeaProjects/BookCollection/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/home/student/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/home/student/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/student/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/student/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 test.persistence.AuthorDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-01-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-66-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_BookCollection, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.10, user.dir=/home/student/IdeaProjects/BookCollection, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@326d27ac, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_BookCollection, java.class.version=55.0}
[DEBUG] 2021-03-01 10:53:00.595 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-01 10:53:00.598 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-01 10:53:00.600 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-01 10:53:00.600 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76ddd61a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47406941]
[DEBUG] 2021-03-01 10:53:00.827 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-01 10:53:00.827 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-01 10:53:00.870 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-01 10:53:00.870 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-01 10:53:01.518 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-01 10:53:01.529 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-01 10:53:01.529 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-01 10:53:01.529 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-01 10:53:01.599 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-01 10:53:01.600 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-01 10:53:01.600 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-01 10:53:01.600 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-01 10:53:01.660 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-01 10:53:01.660 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-01 10:53:01.663 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-01 10:53:01.663 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-01 10:53:01.741 [main] AbstractEntityPersister - Static SQL for entity: entity.User
[DEBUG] 2021-03-01 10:53:01.747 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-03-01 10:53:01.747 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_3_, user_.first_name as first_na3_3_, user_.last_name as last_nam4_3_, user_.password as password5_3_, user_.username as username6_3_ from user user_ where user_.id=?
[DEBUG] 2021-03-01 10:53:01.747 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 10:53:01.748 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-03-01 10:53:01.748 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-03-01 10:53:01.749 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 10:53:01.890 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca3d25b]
[DEBUG] 2021-03-01 10:53:01.892 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-01 10:53:01.892 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 10:53:01.892 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 10:53:01.892 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-01 10:53:01.892 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-01 10:53:01.897 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:01.933 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:01.941 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-01 10:53:01.955 [main] EntityLoader - Static select for entity entity.User [NONE]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 10:53:01.955 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e245739]
[DEBUG] 2021-03-01 10:53:01.956 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-01 10:53:01.956 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 10:53:01.956 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 10:53:01.956 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-01 10:53:01.956 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-01 10:53:01.956 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:01.956 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:01.959 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-01 10:53:01.959 [main] EntityLoader - Static select for entity entity.User [READ]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 10:53:02.020 [main] Loader - Static select for action ACTION_MERGE on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 10:53:02.021 [main] Loader - Static select for action ACTION_REFRESH on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-01 10:53:02.022 [main] AbstractEntityPersister - Static SQL for entity: entity.Genre
[DEBUG] 2021-03-01 10:53:02.022 [main] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-03-01 10:53:02.022 [main] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-03-01 10:53:02.022 [main] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-03-01 10:53:02.026 [main] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-03-01 10:53:02.026 [main] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-03-01 10:53:02.026 [main] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-03-01 10:53:02.026 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5809fa26]
[DEBUG] 2021-03-01 10:53:02.026 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-01 10:53:02.026 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:02.026 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:02.028 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-01 10:53:02.028 [main] EntityLoader - Static select for entity entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 10:53:02.028 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23468512]
[DEBUG] 2021-03-01 10:53:02.028 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-01 10:53:02.028 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:02.034 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:02.035 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-01 10:53:02.035 [main] EntityLoader - Static select for entity entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 10:53:02.040 [main] Loader - Static select for action ACTION_MERGE on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 10:53:02.040 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister - Static SQL for entity: entity.Author
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-03-01 10:53:02.041 [main] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-01 10:53:02.041 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8279e5]
[DEBUG] 2021-03-01 10:53:02.041 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 10:53:02.041 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 10:53:02.041 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:02.042 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:02.042 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-01 10:53:02.042 [main] EntityLoader - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 10:53:02.042 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3caafa67]
[DEBUG] 2021-03-01 10:53:02.042 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-01 10:53:02.042 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-01 10:53:02.042 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:02.042 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:02.049 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-01 10:53:02.051 [main] EntityLoader - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 10:53:02.051 [main] Loader - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 10:53:02.053 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister - Static SQL for entity: entity.Book
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i4_1_, book_.genre_id as genre_id5_1_, book_.isbn as isbn2_1_, book_.title as title3_1_, book_.user_id as user_id6_1_ from book book_ where book_.id=?
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, title, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, title=?, user_id=? where id=?
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-03-01 10:53:02.053 [main] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, title, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-01 10:53:02.059 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53747c4a]
[DEBUG] 2021-03-01 10:53:02.059 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-01 10:53:02.062 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ea7565]
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-01 10:53:02.075 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d366c2]
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-01 10:53:02.075 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5232e3f1]
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-01 10:53:02.075 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-01 10:53:02.079 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-01 10:53:02.080 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-01 10:53:02.080 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-01 10:53:02.080 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:02.080 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:02.085 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-01 10:53:02.085 [main] EntityLoader - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-01 10:53:02.085 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c90b7b7]
[DEBUG] 2021-03-01 10:53:02.087 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-01 10:53:02.087 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ba1308d]
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-01 10:53:02.091 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235c997d]
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-01 10:53:02.091 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-01 10:53:02.091 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9a878]
[DEBUG] 2021-03-01 10:53:02.092 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-01 10:53:02.095 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-01 10:53:02.095 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-01 10:53:02.095 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-01 10:53:02.095 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-01 10:53:02.095 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-01 10:53:02.096 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-01 10:53:02.097 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-01 10:53:02.099 [main] EntityLoader - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-01 10:53:02.103 [main] Loader - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-01 10:53:02.105 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-01 10:53:02.188 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-01 10:53:02.189 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-01 10:53:02.189 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-01 10:53:02.201 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-01 10:53:02.201 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-01 10:53:02.202 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-01 10:53:02.202 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-01 10:53:02.215 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@43245559
[DEBUG] 2021-03-01 10:53:02.217 [main] SessionFactoryRegistry - Registering SessionFactory: 16a1316a-85c5-468b-b4b6-3be8d2ff3ff2 (<unnamed>)
[DEBUG] 2021-03-01 10:53:02.217 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-01 10:53:02.849 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-01 10:53:02.908 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-01 10:53:02.936 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7d2c9361
[DEBUG] 2021-03-01 10:53:02.964 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-01 10:53:02.997 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 10:53:03.035 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-01 10:53:03.130 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 10:53:03.200 [main] FromElement - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-01 10:53:03.211 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 10:53:03.231 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 10:53:03.244 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@2f879bab
[DEBUG] 2021-03-01 10:53:03.246 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> author0_.last_name
[DEBUG] 2021-03-01 10:53:03.248 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 10:53:03.263 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) ( where ( like ( author0_.last_name author0_.id lastName ) ? ) ) )
[DEBUG] 2021-03-01 10:53:03.329 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-01 10:53:03.329 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 10:53:03.334 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'author0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=author0_,className=entity.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2f879bab}

[DEBUG] 2021-03-01 10:53:03.334 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 10:53:03.350 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-01 10:53:03.361 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.last_name like ?
[DEBUG] 2021-03-01 10:53:03.361 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 10:53:03.414 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.last_name like ?
[DEBUG] 2021-03-01 10:53:03.452 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 10:53:03.473 [main] Loader - Result row: EntityKey[entity.Author#1]
[DEBUG] 2021-03-01 10:53:03.497 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 10:53:03.499 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 10:53:03.499 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.499 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 10:53:03.502 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.515 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 10:53:03.517 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-01 10:53:03.844 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-03-01 10:53:03.850 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0
[DEBUG] 2021-03-01 10:53:03.858 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 10:53:03.862 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-01 10:53:03.864 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-01 10:53:03.867 [main] FromElement - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-01 10:53:03.875 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-01 10:53:03.876 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-01 10:53:03.877 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2021-03-01 10:53:03.893 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-01 10:53:03.895 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-01 10:53:03.896 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}

[DEBUG] 2021-03-01 10:53:03.901 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 10:53:03.901 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Author as generatedAlias0
[DEBUG] 2021-03-01 10:53:03.901 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2021-03-01 10:53:03.901 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-01 10:53:03.901 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2021-03-01 10:53:03.916 [main] Loader - Result set row: 0
[DEBUG] 2021-03-01 10:53:03.916 [main] Loader - Result row: EntityKey[entity.Author#1]
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result set row: 1
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result row: EntityKey[entity.Author#2]
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result set row: 2
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result row: EntityKey[entity.Author#3]
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result set row: 3
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result row: EntityKey[entity.Author#4]
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result set row: 4
[DEBUG] 2021-03-01 10:53:03.917 [main] Loader - Result row: EntityKey[entity.Author#5]
[DEBUG] 2021-03-01 10:53:03.917 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-01 10:53:03.917 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-01 10:53:03.917 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.917 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#2]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Done materializing entity [entity.Author#2]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#4]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Done materializing entity [entity.Author#4]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#5]
[DEBUG] 2021-03-01 10:53:03.918 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-01 10:53:03.931 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.931 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-01 10:53:03.931 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-01 10:53:03.931 [main] TwoPhaseLoad - Done materializing entity [entity.Author#5]
[DEBUG] 2021-03-01 10:53:03.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
