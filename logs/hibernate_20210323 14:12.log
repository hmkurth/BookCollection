[DEBUG] 2021-03-23 14:11:35.647 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-23 14:11:35.677 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-23 14:11:35.694 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-23 14:11:36.110 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-23 14:11:36.118 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-23 14:11:36.732 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-03-23 14:11:36.737 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-03-23 14:11:36.789 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-23 14:11:39.205 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-23 14:11:39.442 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-23 14:11:39.457 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-23 14:11:39.596 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-23 14:11:39.956 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@104dc1a2
[DEBUG] 2021-03-23 14:11:39.960 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@104dc1a2
[DEBUG] 2021-03-23 14:11:39.960 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@104dc1a2
[DEBUG] 2021-03-23 14:11:39.962 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59edb4f5
[DEBUG] 2021-03-23 14:11:39.962 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4dad0eed
[DEBUG] 2021-03-23 14:11:39.970 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b0afd7
[DEBUG] 2021-03-23 14:11:39.972 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2cd388f5
[DEBUG] 2021-03-23 14:11:39.972 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2cd388f5
[DEBUG] 2021-03-23 14:11:39.972 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2cd388f5
[DEBUG] 2021-03-23 14:11:39.986 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2c829dbc
[DEBUG] 2021-03-23 14:11:39.991 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2c829dbc
[DEBUG] 2021-03-23 14:11:39.991 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c829dbc
[DEBUG] 2021-03-23 14:11:39.994 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ff15a50
[DEBUG] 2021-03-23 14:11:39.995 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ff15a50
[DEBUG] 2021-03-23 14:11:39.998 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ff15a50
[DEBUG] 2021-03-23 14:11:40.006 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3cc30dee
[DEBUG] 2021-03-23 14:11:40.006 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3cc30dee
[DEBUG] 2021-03-23 14:11:40.006 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3cc30dee
[DEBUG] 2021-03-23 14:11:40.010 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66fb45e5
[DEBUG] 2021-03-23 14:11:40.010 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66fb45e5
[DEBUG] 2021-03-23 14:11:40.017 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66fb45e5
[DEBUG] 2021-03-23 14:11:40.019 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6cfbbff7
[DEBUG] 2021-03-23 14:11:40.019 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6cfbbff7
[DEBUG] 2021-03-23 14:11:40.019 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6cfbbff7
[DEBUG] 2021-03-23 14:11:40.022 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@61874b9d
[DEBUG] 2021-03-23 14:11:40.022 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@61874b9d
[DEBUG] 2021-03-23 14:11:40.023 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@61874b9d
[DEBUG] 2021-03-23 14:11:40.024 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d98daa0
[DEBUG] 2021-03-23 14:11:40.024 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d98daa0
[DEBUG] 2021-03-23 14:11:40.029 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7499eac7
[DEBUG] 2021-03-23 14:11:40.030 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7499eac7
[DEBUG] 2021-03-23 14:11:40.034 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1de4285e
[DEBUG] 2021-03-23 14:11:40.035 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1de4285e
[DEBUG] 2021-03-23 14:11:40.036 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a484ce1
[DEBUG] 2021-03-23 14:11:40.041 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4099209b
[DEBUG] 2021-03-23 14:11:40.046 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1a464fa3
[DEBUG] 2021-03-23 14:11:40.046 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a464fa3
[DEBUG] 2021-03-23 14:11:40.048 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2091833
[DEBUG] 2021-03-23 14:11:40.048 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2091833
[DEBUG] 2021-03-23 14:11:40.072 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5e230fc6
[DEBUG] 2021-03-23 14:11:40.073 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e230fc6
[DEBUG] 2021-03-23 14:11:40.081 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c82b5df
[DEBUG] 2021-03-23 14:11:40.083 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c82b5df
[DEBUG] 2021-03-23 14:11:40.098 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@664212ab
[DEBUG] 2021-03-23 14:11:40.100 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@664212ab
[DEBUG] 2021-03-23 14:11:40.102 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ba467c2
[DEBUG] 2021-03-23 14:11:40.102 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ba467c2
[DEBUG] 2021-03-23 14:11:40.190 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@32120956
[DEBUG] 2021-03-23 14:11:40.191 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@32120956
[DEBUG] 2021-03-23 14:11:40.195 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e4389ed
[DEBUG] 2021-03-23 14:11:40.196 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e4389ed
[DEBUG] 2021-03-23 14:11:40.199 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@468e8565
[DEBUG] 2021-03-23 14:11:40.199 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@468e8565
[DEBUG] 2021-03-23 14:11:40.201 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@478b0739
[DEBUG] 2021-03-23 14:11:40.201 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@478b0739
[DEBUG] 2021-03-23 14:11:40.203 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@609319c3
[DEBUG] 2021-03-23 14:11:40.204 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@609319c3
[DEBUG] 2021-03-23 14:11:40.205 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@77429040
[DEBUG] 2021-03-23 14:11:40.206 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77429040
[DEBUG] 2021-03-23 14:11:40.206 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77429040
[DEBUG] 2021-03-23 14:11:40.208 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40ef0af8
[DEBUG] 2021-03-23 14:11:40.211 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d152bcd
[DEBUG] 2021-03-23 14:11:40.212 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d152bcd
[DEBUG] 2021-03-23 14:11:40.212 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d152bcd
[DEBUG] 2021-03-23 14:11:40.214 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1450131a
[DEBUG] 2021-03-23 14:11:40.216 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2272cbb0
[DEBUG] 2021-03-23 14:11:40.217 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2272cbb0
[DEBUG] 2021-03-23 14:11:40.224 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@236eccd1
[DEBUG] 2021-03-23 14:11:40.227 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@236eccd1
[DEBUG] 2021-03-23 14:11:40.232 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2839e3c8
[DEBUG] 2021-03-23 14:11:40.232 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2839e3c8
[DEBUG] 2021-03-23 14:11:40.233 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@60f21960
[DEBUG] 2021-03-23 14:11:40.233 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60f21960
[DEBUG] 2021-03-23 14:11:40.235 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79476a4e
[DEBUG] 2021-03-23 14:11:40.236 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79476a4e
[DEBUG] 2021-03-23 14:11:40.236 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5856dbe4
[DEBUG] 2021-03-23 14:11:40.238 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@52ea0269
[DEBUG] 2021-03-23 14:11:40.246 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@52ea0269
[DEBUG] 2021-03-23 14:11:40.246 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@52ea0269
[DEBUG] 2021-03-23 14:11:40.250 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4da1f38a
[DEBUG] 2021-03-23 14:11:40.250 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4da1f38a
[DEBUG] 2021-03-23 14:11:40.251 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4da1f38a
[DEBUG] 2021-03-23 14:11:40.263 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@16c1519e
[DEBUG] 2021-03-23 14:11:40.264 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4751e8b9
[DEBUG] 2021-03-23 14:11:40.270 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@494c8f29
[DEBUG] 2021-03-23 14:11:40.271 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@494c8f29
[DEBUG] 2021-03-23 14:11:40.271 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@494c8f29
[DEBUG] 2021-03-23 14:11:40.279 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7792d851
[DEBUG] 2021-03-23 14:11:40.279 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7792d851
[DEBUG] 2021-03-23 14:11:40.279 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7792d851
[DEBUG] 2021-03-23 14:11:40.280 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1235151c
[DEBUG] 2021-03-23 14:11:40.285 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6d672bd4
[DEBUG] 2021-03-23 14:11:40.288 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f486211
[DEBUG] 2021-03-23 14:11:40.288 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f486211
[DEBUG] 2021-03-23 14:11:40.293 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@472d0f4
[DEBUG] 2021-03-23 14:11:40.296 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e39baf0
[DEBUG] 2021-03-23 14:11:40.296 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e39baf0
[DEBUG] 2021-03-23 14:11:40.305 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7945b206
[DEBUG] 2021-03-23 14:11:40.305 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7945b206
[DEBUG] 2021-03-23 14:11:40.306 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b862408
[DEBUG] 2021-03-23 14:11:40.310 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@307e4c44
[DEBUG] 2021-03-23 14:11:40.317 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@61615b4a
[DEBUG] 2021-03-23 14:11:40.330 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5f366587
[DEBUG] 2021-03-23 14:11:40.330 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f366587
[DEBUG] 2021-03-23 14:11:40.331 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c02670f
[DEBUG] 2021-03-23 14:11:40.331 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71179b6f
[DEBUG] 2021-03-23 14:11:40.331 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13bdf540
[DEBUG] 2021-03-23 14:11:40.331 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@526e8108
[DEBUG] 2021-03-23 14:11:40.332 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4dcbae55
[DEBUG] 2021-03-23 14:11:40.332 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9860
[DEBUG] 2021-03-23 14:11:40.332 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ca16adc
[DEBUG] 2021-03-23 14:11:40.332 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ae1c281
[DEBUG] 2021-03-23 14:11:40.507 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-23 14:11:40.512 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-23 14:11:40.523 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-23 14:11:40.524 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-23 14:11:40.525 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-23 14:11:40.533 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-23 14:11:40.536 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-23 14:11:40.541 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-23 14:11:40.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-23 14:11:40.547 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-23 14:11:40.548 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-23 14:11:40.548 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-23 14:11:40.549 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-23 14:11:40.551 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-23 14:11:40.564 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_BookCollection
[INFO ] 2021-03-23 14:11:40.564 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-23 14:11:40.564 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-23 14:11:41.382 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-23 14:11:42.170 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-23 14:11:42.171 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-03-23 14:11:42.171 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-23 14:11:42.417 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-23 14:11:42.472 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-23 14:11:42.884 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-23 14:11:43.164 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-23 14:11:43.203 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a216eb4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@bb3ecfe]
[DEBUG] 2021-03-23 14:11:43.434 [main] AnnotationBinder - Binding entity from annotated class: Author
[DEBUG] 2021-03-23 14:11:43.521 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-23 14:11:43.531 [main] EntityBinder - Import with entity name Author
[DEBUG] 2021-03-23 14:11:43.537 [main] EntityBinder - Bind entity Author on table author
[DEBUG] 2021-03-23 14:11:43.643 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.652 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-23 14:11:43.658 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Author:id]
[DEBUG] 2021-03-23 14:11:43.663 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-23 14:11:43.674 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-23 14:11:43.686 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-23 14:11:43.690 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.692 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-23 14:11:43.693 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Author:firstName]
[DEBUG] 2021-03-23 14:11:43.699 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-23 14:11:43.700 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-23 14:11:43.701 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.703 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-23 14:11:43.704 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Author:lastName]
[DEBUG] 2021-03-23 14:11:43.704 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-23 14:11:43.705 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-23 14:11:43.710 [main] AnnotationBinder - Binding entity from annotated class: Book
[DEBUG] 2021-03-23 14:11:43.721 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-23 14:11:43.722 [main] EntityBinder - Import with entity name Book
[DEBUG] 2021-03-23 14:11:43.723 [main] EntityBinder - Bind entity Book on table book
[DEBUG] 2021-03-23 14:11:43.781 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.785 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-23 14:11:43.785 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Book:id]
[DEBUG] 2021-03-23 14:11:43.786 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-23 14:11:43.787 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-23 14:11:43.788 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-23 14:11:43.799 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-23 14:11:43.802 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.828 [main] PropertyBinder - Building property author
[DEBUG] 2021-03-23 14:11:43.830 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-23 14:11:43.831 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.832 [main] PropertyBinder - Building property genre
[DEBUG] 2021-03-23 14:11:43.833 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.834 [main] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-03-23 14:11:43.834 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Book:isbn]
[DEBUG] 2021-03-23 14:11:43.834 [main] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-03-23 14:11:43.836 [main] PropertyBinder - Building property isbn
[DEBUG] 2021-03-23 14:11:43.839 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.841 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-03-23 14:11:43.841 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Book:title]
[DEBUG] 2021-03-23 14:11:43.846 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-03-23 14:11:43.846 [main] PropertyBinder - Building property title
[DEBUG] 2021-03-23 14:11:43.847 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-23 14:11:43.847 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.854 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-23 14:11:43.861 [main] AnnotationBinder - Binding entity from annotated class: Genre
[DEBUG] 2021-03-23 14:11:43.862 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-23 14:11:43.863 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2021-03-23 14:11:43.863 [main] EntityBinder - Bind entity Genre on table genre
[DEBUG] 2021-03-23 14:11:43.865 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.865 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-23 14:11:43.865 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Genre:id]
[DEBUG] 2021-03-23 14:11:43.868 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-23 14:11:43.869 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-23 14:11:43.869 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-23 14:11:43.869 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.872 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-03-23 14:11:43.872 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [Genre:name]
[DEBUG] 2021-03-23 14:11:43.876 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-03-23 14:11:43.876 [main] PropertyBinder - Building property name
[DEBUG] 2021-03-23 14:11:43.878 [main] AnnotationBinder - Binding entity from annotated class: User
[DEBUG] 2021-03-23 14:11:43.878 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-23 14:11:43.879 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-03-23 14:11:43.879 [main] EntityBinder - Bind entity User on table user
[DEBUG] 2021-03-23 14:11:43.884 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.884 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-23 14:11:43.886 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [User:id]
[DEBUG] 2021-03-23 14:11:43.886 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-23 14:11:43.886 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-23 14:11:43.887 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-23 14:11:43.887 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.887 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-03-23 14:11:43.888 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [User:email]
[DEBUG] 2021-03-23 14:11:43.892 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-03-23 14:11:43.892 [main] PropertyBinder - Building property email
[DEBUG] 2021-03-23 14:11:43.892 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.896 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-23 14:11:43.897 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [User:firstName]
[DEBUG] 2021-03-23 14:11:43.897 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-23 14:11:43.897 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-23 14:11:43.898 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.898 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-23 14:11:43.898 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [User:lastName]
[DEBUG] 2021-03-23 14:11:43.898 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-23 14:11:43.899 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-23 14:11:43.899 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.904 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-03-23 14:11:43.904 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [User:password]
[DEBUG] 2021-03-23 14:11:43.905 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-03-23 14:11:43.905 [main] PropertyBinder - Building property password
[DEBUG] 2021-03-23 14:11:43.906 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-23 14:11:43.906 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-03-23 14:11:43.906 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [User:userName]
[DEBUG] 2021-03-23 14:11:43.906 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-03-23 14:11:43.907 [main] PropertyBinder - Building property userName
[DEBUG] 2021-03-23 14:11:43.914 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-23 14:11:43.915 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-23 14:11:43.916 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-23 14:11:43.917 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-23 14:11:43.919 [main] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-03-23 14:11:43.920 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-03-23 14:11:43.921 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-23 14:11:43.921 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-03-23 14:11:43.921 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-23 14:11:43.922 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-03-23 14:11:43.922 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-23 14:11:43.922 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-23 14:11:43.922 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-03-23 14:11:43.922 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-03-23 14:11:43.942 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-03-23 14:11:43.943 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-03-23 14:11:43.943 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-03-23 14:11:43.943 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-03-23 14:11:43.949 [main] InFlightMetadataCollectorImpl - Resolving reference to class: Author
[DEBUG] 2021-03-23 14:11:43.961 [main] InFlightMetadataCollectorImpl - Resolving reference to class: Genre
[DEBUG] 2021-03-23 14:11:43.962 [main] InFlightMetadataCollectorImpl - Resolving reference to class: User
[DEBUG] 2021-03-23 14:11:43.969 [main] InFlightMetadataCollectorImpl - Resolving reference to class: Author
[DEBUG] 2021-03-23 14:11:43.970 [main] InFlightMetadataCollectorImpl - Resolving reference to class: Genre
[DEBUG] 2021-03-23 14:11:43.970 [main] InFlightMetadataCollectorImpl - Resolving reference to class: User
[DEBUG] 2021-03-23 14:11:44.084 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-23 14:11:44.087 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-23 14:11:44.087 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-23 14:11:44.087 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-23 14:11:44.087 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-23 14:11:44.089 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-23 14:11:44.089 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-23 14:11:44.089 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-23 14:11:44.090 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-23 14:11:44.091 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-23 14:11:44.093 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-23 14:11:44.093 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-23 14:11:44.093 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-23 14:11:44.094 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-23 14:11:44.094 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-23 14:11:44.094 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-23 14:11:44.094 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-23 14:11:44.094 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-23 14:11:44.094 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-23 14:11:44.261 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-23 14:11:44.337 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-23 14:11:44.337 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/BookCollection/target/test-classes:/home/student/IdeaProjects/BookCollection/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/home/student/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/home/student/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/student/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/student/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket33645, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-01-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-67-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_BookCollection, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.10, user.dir=/home/student/IdeaProjects/BookCollection, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@722787b5, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_BookCollection, java.class.version=55.0}
[DEBUG] 2021-03-23 14:11:44.404 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-23 14:11:44.404 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-23 14:11:44.410 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-23 14:11:44.410 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a216eb4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e74fd84]
[DEBUG] 2021-03-23 14:11:44.603 [main] ClassLoaderAccessImpl - Not known whether passed class name [User] is safe
[DEBUG] 2021-03-23 14:11:44.604 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : User
[DEBUG] 2021-03-23 14:11:44.704 [main] ClassLoaderAccessImpl - Not known whether passed class name [User] is safe
[DEBUG] 2021-03-23 14:11:44.705 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : User
[DEBUG] 2021-03-23 14:11:46.452 [main] ClassLoaderAccessImpl - Not known whether passed class name [Genre] is safe
[DEBUG] 2021-03-23 14:11:46.453 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Genre
[DEBUG] 2021-03-23 14:11:46.456 [main] ClassLoaderAccessImpl - Not known whether passed class name [Genre] is safe
[DEBUG] 2021-03-23 14:11:46.456 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Genre
[DEBUG] 2021-03-23 14:11:46.504 [main] ClassLoaderAccessImpl - Not known whether passed class name [Author] is safe
[DEBUG] 2021-03-23 14:11:46.504 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Author
[DEBUG] 2021-03-23 14:11:46.506 [main] ClassLoaderAccessImpl - Not known whether passed class name [Author] is safe
[DEBUG] 2021-03-23 14:11:46.506 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Author
[DEBUG] 2021-03-23 14:11:46.588 [main] ClassLoaderAccessImpl - Not known whether passed class name [Book] is safe
[DEBUG] 2021-03-23 14:11:46.589 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Book
[DEBUG] 2021-03-23 14:11:46.598 [main] ClassLoaderAccessImpl - Not known whether passed class name [Book] is safe
[DEBUG] 2021-03-23 14:11:46.599 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Book
[DEBUG] 2021-03-23 14:11:46.752 [main] AbstractEntityPersister - Static SQL for entity: User
[DEBUG] 2021-03-23 14:11:46.753 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-03-23 14:11:46.754 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_3_, user_.first_name as first_na3_3_, user_.last_name as last_nam4_3_, user_.password as password5_3_, user_.username as username6_3_ from user user_ where user_.id=?
[DEBUG] 2021-03-23 14:11:46.755 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-23 14:11:46.755 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-03-23 14:11:46.755 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-03-23 14:11:46.755 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-23 14:11:47.025 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@311a0b3e]
[DEBUG] 2021-03-23 14:11:47.027 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-23 14:11:47.027 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-23 14:11:47.027 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-23 14:11:47.027 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-23 14:11:47.027 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-23 14:11:47.028 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.073 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.103 [main] LoadPlanTreePrinter - LoadPlan(entity=User)
    - Returns
       - EntityReturnImpl(entity=User, querySpaceUid=<gen:0>, path=User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-23 14:11:47.123 [main] EntityLoader - Static select for entity User [NONE]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:11:47.123 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbb42b4]
[DEBUG] 2021-03-23 14:11:47.125 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-23 14:11:47.125 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-23 14:11:47.126 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-23 14:11:47.126 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-23 14:11:47.126 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-23 14:11:47.128 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.129 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.129 [main] LoadPlanTreePrinter - LoadPlan(entity=User)
    - Returns
       - EntityReturnImpl(entity=User, querySpaceUid=<gen:0>, path=User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-23 14:11:47.129 [main] EntityLoader - Static select for entity User [READ]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:11:47.189 [main] Loader - Static select for action ACTION_MERGE on entity User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:11:47.191 [main] Loader - Static select for action ACTION_REFRESH on entity User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:11:47.191 [main] AbstractEntityPersister - Static SQL for entity: Genre
[DEBUG] 2021-03-23 14:11:47.191 [main] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-03-23 14:11:47.197 [main] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-03-23 14:11:47.198 [main] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-03-23 14:11:47.198 [main] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-03-23 14:11:47.198 [main] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-03-23 14:11:47.198 [main] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-03-23 14:11:47.199 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@598778cc]
[DEBUG] 2021-03-23 14:11:47.200 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-23 14:11:47.200 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.201 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.201 [main] LoadPlanTreePrinter - LoadPlan(entity=Genre)
    - Returns
       - EntityReturnImpl(entity=Genre, querySpaceUid=<gen:0>, path=Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-23 14:11:47.201 [main] EntityLoader - Static select for entity Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:11:47.202 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@727453a3]
[DEBUG] 2021-03-23 14:11:47.203 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-23 14:11:47.203 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.208 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.210 [main] LoadPlanTreePrinter - LoadPlan(entity=Genre)
    - Returns
       - EntityReturnImpl(entity=Genre, querySpaceUid=<gen:0>, path=Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-23 14:11:47.211 [main] EntityLoader - Static select for entity Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:11:47.213 [main] Loader - Static select for action ACTION_MERGE on entity Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:11:47.213 [main] Loader - Static select for action ACTION_REFRESH on entity Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:11:47.213 [main] AbstractEntityPersister - Static SQL for entity: Author
[DEBUG] 2021-03-23 14:11:47.213 [main] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-03-23 14:11:47.214 [main] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2021-03-23 14:11:47.214 [main] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2021-03-23 14:11:47.225 [main] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-23 14:11:47.225 [main] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-03-23 14:11:47.225 [main] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-23 14:11:47.226 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f2e67]
[DEBUG] 2021-03-23 14:11:47.226 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-23 14:11:47.226 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-23 14:11:47.226 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.226 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.226 [main] LoadPlanTreePrinter - LoadPlan(entity=Author)
    - Returns
       - EntityReturnImpl(entity=Author, querySpaceUid=<gen:0>, path=Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-23 14:11:47.226 [main] EntityLoader - Static select for entity Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:47.226 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@154864f8]
[DEBUG] 2021-03-23 14:11:47.227 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-23 14:11:47.227 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-23 14:11:47.227 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.227 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.243 [main] LoadPlanTreePrinter - LoadPlan(entity=Author)
    - Returns
       - EntityReturnImpl(entity=Author, querySpaceUid=<gen:0>, path=Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-23 14:11:47.243 [main] EntityLoader - Static select for entity Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:47.244 [main] Loader - Static select for action ACTION_MERGE on entity Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:47.252 [main] Loader - Static select for action ACTION_REFRESH on entity Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister - Static SQL for entity: Book
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i4_1_, book_.genre_id as genre_id5_1_, book_.isbn as isbn2_1_, book_.title as title3_1_, book_.user_id as user_id6_1_ from book book_ where book_.id=?
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, title, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, title=?, user_id=? where id=?
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-03-23 14:11:47.252 [main] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, title, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-23 14:11:47.252 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d3ad37a]
[DEBUG] 2021-03-23 14:11:47.253 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-23 14:11:47.304 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@286a4c52]
[DEBUG] 2021-03-23 14:11:47.315 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-23 14:11:47.329 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-23 14:11:47.348 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-23 14:11:47.348 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342a1f84]
[DEBUG] 2021-03-23 14:11:47.348 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-23 14:11:47.359 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b196d3]
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-23 14:11:47.359 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-23 14:11:47.360 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-23 14:11:47.360 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.360 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.401 [main] LoadPlanTreePrinter - LoadPlan(entity=Book)
    - Returns
       - EntityReturnImpl(entity=Book, querySpaceUid=<gen:0>, path=Book)
          - EntityAttributeFetchImpl(entity=Author, querySpaceUid=<gen:1>, path=Book.author)
          - EntityAttributeFetchImpl(entity=Genre, querySpaceUid=<gen:2>, path=Book.genre)
          - EntityAttributeFetchImpl(entity=User, querySpaceUid=<gen:3>, path=Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-23 14:11:47.402 [main] EntityLoader - Static select for entity Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-23 14:11:47.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e5aacd9]
[DEBUG] 2021-03-23 14:11:47.405 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-23 14:11:47.406 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f810c18]
[DEBUG] 2021-03-23 14:11:47.406 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-23 14:11:47.406 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-23 14:11:47.407 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-23 14:11:47.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@120411ec]
[DEBUG] 2021-03-23 14:11:47.407 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-23 14:11:47.407 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-23 14:11:47.407 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-23 14:11:47.407 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-23 14:11:47.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2e9db2]
[DEBUG] 2021-03-23 14:11:47.408 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-23 14:11:47.408 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-23 14:11:47.408 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-23 14:11:47.408 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-23 14:11:47.408 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-23 14:11:47.408 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-23 14:11:47.412 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-23 14:11:47.415 [main] LoadPlanTreePrinter - LoadPlan(entity=Book)
    - Returns
       - EntityReturnImpl(entity=Book, querySpaceUid=<gen:0>, path=Book)
          - EntityAttributeFetchImpl(entity=Author, querySpaceUid=<gen:1>, path=Book.author)
          - EntityAttributeFetchImpl(entity=Genre, querySpaceUid=<gen:2>, path=Book.genre)
          - EntityAttributeFetchImpl(entity=User, querySpaceUid=<gen:3>, path=Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-23 14:11:47.416 [main] EntityLoader - Static select for entity Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-23 14:11:47.422 [main] Loader - Static select for action ACTION_MERGE on entity Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-23 14:11:47.425 [main] Loader - Static select for action ACTION_REFRESH on entity Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-23 14:11:47.674 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-23 14:11:47.674 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-23 14:11:47.680 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-23 14:11:47.718 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-23 14:11:47.719 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-23 14:11:47.722 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-23 14:11:47.723 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-23 14:11:47.732 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6abe62bb
[DEBUG] 2021-03-23 14:11:47.735 [main] SessionFactoryRegistry - Registering SessionFactory: 84a6c96e-f20e-4dbc-8a54-2ae0def3c99b (<unnamed>)
[DEBUG] 2021-03-23 14:11:47.735 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-23 14:11:47.962 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-23 14:11:47.994 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-23 14:11:47.994 [main] TransactionImpl - begin
[DEBUG] 2021-03-23 14:11:48.110 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-23 14:11:48.122 [main] SQL - insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-23 14:11:48.359 [main] IdentifierGeneratorHelper - Natively generated identity: 34
[DEBUG] 2021-03-23 14:11:48.360 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:48.383 [main] TransactionImpl - committing
[DEBUG] 2021-03-23 14:11:48.384 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-23 14:11:48.389 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-23 14:11:48.406 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-23 14:11:48.409 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-23 14:11:48.413 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-23 14:11:48.414 [main] EntityPrinter - Author{firstName=Kiera, lastName=Cass, id=34}
[DEBUG] 2021-03-23 14:11:48.430 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:48.433 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:48.658 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:48.758 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:11:48.763 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:11:48.776 [main] TwoPhaseLoad - Resolving attributes for [Author#34]
[DEBUG] 2021-03-23 14:11:48.776 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kiera
[DEBUG] 2021-03-23 14:11:48.777 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:48.777 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Cass
[DEBUG] 2021-03-23 14:11:48.777 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:48.780 [main] TwoPhaseLoad - Done materializing entity [Author#34]
[DEBUG] 2021-03-23 14:11:48.782 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:48.783 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#34
[DEBUG] 2021-03-23 14:11:48.783 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:50.751 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:51.209 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:11:51.234 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:11:51.259 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:11:51.259 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:11:51.275 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:51.281 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:11:51.281 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:51.285 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:11:51.285 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:51.294 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#1
[DEBUG] 2021-03-23 14:11:51.294 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:52.950 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-03-23 14:11:52.997 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@30bd39d5
[DEBUG] 2021-03-23 14:11:53.128 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-03-23 14:11:53.167 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:11:53.236 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-23 14:11:53.316 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:11:53.405 [main] FromElement - FromClause{level=1} : Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-23 14:11:53.415 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-23 14:11:53.427 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:11:53.429 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2021-03-23 14:11:53.461 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-23 14:11:53.461 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:11:53.464 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=Author}}

[DEBUG] 2021-03-23 14:11:53.474 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:11:53.500 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-03-23 14:11:53.500 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2021-03-23 14:11:53.500 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:11:53.543 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2021-03-23 14:11:53.573 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:11:53.581 [main] Loader - Result row: EntityKey[Author#1]
[DEBUG] 2021-03-23 14:11:53.581 [main] Loader - Result set row: 1
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result row: EntityKey[Author#2]
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result set row: 2
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result row: EntityKey[Author#3]
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result set row: 3
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result row: EntityKey[Author#4]
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result set row: 4
[DEBUG] 2021-03-23 14:11:53.582 [main] Loader - Result row: EntityKey[Author#5]
[DEBUG] 2021-03-23 14:11:53.585 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:11:53.585 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:11:53.585 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.585 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:11:53.585 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Resolving attributes for [Author#2]
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Done materializing entity [Author#2]
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Resolving attributes for [Author#3]
[DEBUG] 2021-03-23 14:11:53.589 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Done materializing entity [Author#3]
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Resolving attributes for [Author#4]
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Done materializing entity [Author#4]
[DEBUG] 2021-03-23 14:11:53.590 [main] TwoPhaseLoad - Resolving attributes for [Author#5]
[DEBUG] 2021-03-23 14:11:53.591 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-23 14:11:53.591 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.591 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-23 14:11:53.591 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:53.591 [main] TwoPhaseLoad - Done materializing entity [Author#5]
[DEBUG] 2021-03-23 14:11:53.609 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:55.152 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:55.342 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:11:55.342 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:11:55.348 [main] TwoPhaseLoad - Resolving attributes for [Author#3]
[DEBUG] 2021-03-23 14:11:55.348 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-23 14:11:55.353 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:55.354 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-23 14:11:55.354 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:55.354 [main] TwoPhaseLoad - Done materializing entity [Author#3]
[DEBUG] 2021-03-23 14:11:55.354 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:55.355 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#3
[DEBUG] 2021-03-23 14:11:55.360 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:55.372 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-23 14:11:55.372 [main] TransactionImpl - begin
[DEBUG] 2021-03-23 14:11:55.527 [main] TransactionImpl - committing
[DEBUG] 2021-03-23 14:11:55.527 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-23 14:11:55.527 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-23 14:11:55.528 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-23 14:11:55.528 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-23 14:11:55.528 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-23 14:11:55.528 [main] EntityPrinter - Author{firstName=Stephen, lastName=King, id=3}
[DEBUG] 2021-03-23 14:11:55.566 [main] SQL - delete from author where id=?
[DEBUG] 2021-03-23 14:11:55.650 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:55.654 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:55.654 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-23 14:11:55.697 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:55.813 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:55.836 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#3
[DEBUG] 2021-03-23 14:11:55.837 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:56.831 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:56.960 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:11:56.977 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:11:57.005 [main] TwoPhaseLoad - Resolving attributes for [Author#2]
[DEBUG] 2021-03-23 14:11:57.006 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-23 14:11:57.018 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:57.018 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-23 14:11:57.018 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:57.018 [main] TwoPhaseLoad - Done materializing entity [Author#2]
[DEBUG] 2021-03-23 14:11:57.021 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:57.021 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#2
[DEBUG] 2021-03-23 14:11:57.021 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:57.085 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-23 14:11:57.085 [main] TransactionImpl - begin
[DEBUG] 2021-03-23 14:11:57.113 [main] TransactionImpl - committing
[DEBUG] 2021-03-23 14:11:57.113 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-23 14:11:57.113 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-23 14:11:57.189 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-23 14:11:57.189 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-23 14:11:57.189 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-23 14:11:57.189 [main] EntityPrinter - Author{firstName=Cassandra, lastName=Smith, id=2}
[DEBUG] 2021-03-23 14:11:57.190 [main] SQL - update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-23 14:11:57.317 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:57.326 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:57.328 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:11:57.341 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:11:57.344 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:11:57.347 [main] TwoPhaseLoad - Resolving attributes for [Author#2]
[DEBUG] 2021-03-23 14:11:57.348 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-23 14:11:57.348 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:57.348 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Smith
[DEBUG] 2021-03-23 14:11:57.348 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:57.351 [main] TwoPhaseLoad - Done materializing entity [Author#2]
[DEBUG] 2021-03-23 14:11:57.351 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:11:57.351 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#2
[DEBUG] 2021-03-23 14:11:57.354 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:11:58.643 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2021-03-23 14:11:58.713 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2021-03-23 14:11:58.739 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:11:58.784 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-23 14:11:58.784 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:11:58.784 [main] FromElement - FromClause{level=1} : Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-23 14:11:58.790 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-23 14:11:58.832 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-23 14:11:58.862 [main] DotNode - getDataType() : firstName -> org.hibernate.type.StringType@1de4285e
[DEBUG] 2021-03-23 14:11:58.902 [main] FromReferenceNode - Resolved : generatedAlias0.firstName -> author0_.first_name
[DEBUG] 2021-03-23 14:11:58.922 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:11:58.924 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) ( where ( like ( author0_.first_name author0_.id firstName ) ? ) ) )
[DEBUG] 2021-03-23 14:11:58.929 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-23 14:11:58.931 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:11:58.935 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=Author}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'author0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=author0_,className=Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1de4285e}

[DEBUG] 2021-03-23 14:11:58.936 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:11:58.936 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2021-03-23 14:11:58.936 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.first_name like ?
[DEBUG] 2021-03-23 14:11:58.936 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:11:58.977 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.first_name like ?
[DEBUG] 2021-03-23 14:11:59.139 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:11:59.139 [main] Loader - Result row: EntityKey[Author#1]
[DEBUG] 2021-03-23 14:11:59.141 [main] Loader - Result set row: 1
[DEBUG] 2021-03-23 14:11:59.142 [main] Loader - Result row: EntityKey[Author#2]
[DEBUG] 2021-03-23 14:11:59.142 [main] Loader - Result set row: 2
[DEBUG] 2021-03-23 14:11:59.142 [main] Loader - Result row: EntityKey[Author#3]
[DEBUG] 2021-03-23 14:11:59.143 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:11:59.143 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:11:59.143 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Resolving attributes for [Author#2]
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Cassandra
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Clare
[DEBUG] 2021-03-23 14:11:59.147 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Done materializing entity [Author#2]
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Resolving attributes for [Author#3]
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:11:59.148 [main] TwoPhaseLoad - Done materializing entity [Author#3]
[DEBUG] 2021-03-23 14:11:59.153 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:12:00.563 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-23 14:12:00.579 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-23 14:12:00.580 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:00.614 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-23 14:12:00.614 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:00.641 [main] FromElement - FromClause{level=1} : Author (generatedAlias0) -> author0_
[DEBUG] 2021-03-23 14:12:00.642 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-23 14:12:00.642 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-03-23 14:12:00.642 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@1de4285e
[DEBUG] 2021-03-23 14:12:00.642 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> author0_.last_name
[DEBUG] 2021-03-23 14:12:00.642 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:00.655 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) ( where ( like ( author0_.last_name author0_.id lastName ) ? ) ) )
[DEBUG] 2021-03-23 14:12:00.687 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-03-23 14:12:00.687 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:00.688 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=Author}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'author0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=author0_,className=Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1de4285e}

[DEBUG] 2021-03-23 14:12:00.688 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:00.721 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2021-03-23 14:12:00.721 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.last_name like ?
[DEBUG] 2021-03-23 14:12:00.721 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:00.774 [main] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_ where author0_.last_name like ?
[DEBUG] 2021-03-23 14:12:01.178 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:12:01.220 [main] Loader - Result row: EntityKey[Author#1]
[DEBUG] 2021-03-23 14:12:01.276 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:12:01.276 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:12:01.276 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:01.276 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:12:01.281 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:01.284 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:12:01.299 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:12:10.324 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=1
[DEBUG] 2021-03-23 14:12:10.392 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=1
[DEBUG] 2021-03-23 14:12:10.397 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:10.435 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-03-23 14:12:10.461 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:10.586 [main] FromElement - FromClause{level=1} : Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-23 14:12:10.609 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:10.609 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:10.609 [main] DotNode - getDataType() : genre -> org.hibernate.type.ManyToOneType(Genre)
[DEBUG] 2021-03-23 14:12:10.610 [main] DotNode - dereferenceShortcut() : property genre in Book does not require a join.
[DEBUG] 2021-03-23 14:12:10.610 [main] DotNode - Terminal getPropertyPath = [genre]
[DEBUG] 2021-03-23 14:12:10.610 [main] FromReferenceNode - Resolved : generatedAlias0.genre -> book0_.genre_id
[DEBUG] 2021-03-23 14:12:10.783 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:10.809 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) 1 ) ) )
[DEBUG] 2021-03-23 14:12:10.846 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-23 14:12:10.871 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:10.917 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-03-23 14:12:10.917 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:10.955 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=1
[DEBUG] 2021-03-23 14:12:10.955 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.genre_id=1
[DEBUG] 2021-03-23 14:12:10.955 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:11.065 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.genre_id=1
[DEBUG] 2021-03-23 14:12:11.706 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:12:11.770 [main] Loader - Result row: EntityKey[Book#1]
[DEBUG] 2021-03-23 14:12:11.842 [main] Loader - Result set row: 1
[DEBUG] 2021-03-23 14:12:11.842 [main] Loader - Result row: EntityKey[Book#4]
[DEBUG] 2021-03-23 14:12:11.843 [main] TwoPhaseLoad - Resolving attributes for [Book#1]
[DEBUG] 2021-03-23 14:12:11.860 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-23 14:12:11.873 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:11.914 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:12.335 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:12.389 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:12.765 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:12:12.768 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:12:12.772 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:12.774 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:12:12.774 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:12.779 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:12:12.780 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:12.788 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#1
[DEBUG] 2021-03-23 14:12:12.829 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:12.830 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:12.830 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:13.058 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:13.069 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:13.197 [main] TwoPhaseLoad - Resolving attributes for [Genre#1]
[DEBUG] 2021-03-23 14:12:13.201 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-23 14:12:13.209 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.224 [main] TwoPhaseLoad - Done materializing entity [Genre#1]
[DEBUG] 2021-03-23 14:12:13.224 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:13.229 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#1
[DEBUG] 2021-03-23 14:12:13.229 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-23 14:12:13.232 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.232 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-23 14:12:13.232 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.232 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:13.241 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.241 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:13.267 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:13.267 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:13.267 [main] TwoPhaseLoad - Resolving attributes for [User#1]
[DEBUG] 2021-03-23 14:12:13.276 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:13.276 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.276 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-23 14:12:13.276 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.276 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:13.280 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.280 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:13.280 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.280 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-23 14:12:13.280 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.281 [main] TwoPhaseLoad - Done materializing entity [User#1]
[DEBUG] 2021-03-23 14:12:13.295 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:13.295 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#1
[DEBUG] 2021-03-23 14:12:13.328 [main] TwoPhaseLoad - Done materializing entity [Book#1]
[DEBUG] 2021-03-23 14:12:13.328 [main] TwoPhaseLoad - Resolving attributes for [Book#4]
[DEBUG] 2021-03-23 14:12:13.328 [main] TwoPhaseLoad - Processing attribute `author` : value = 3
[DEBUG] 2021-03-23 14:12:13.328 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.329 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:13.405 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:13.405 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:13.406 [main] TwoPhaseLoad - Resolving attributes for [Author#3]
[DEBUG] 2021-03-23 14:12:13.406 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-23 14:12:13.406 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.406 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-23 14:12:13.406 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.406 [main] TwoPhaseLoad - Done materializing entity [Author#3]
[DEBUG] 2021-03-23 14:12:13.407 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:13.407 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#3
[DEBUG] 2021-03-23 14:12:13.407 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:13.407 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.441 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0743566575
[DEBUG] 2021-03-23 14:12:13.442 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.442 [main] TwoPhaseLoad - Processing attribute `title` : value = City of Bones
[DEBUG] 2021-03-23 14:12:13.442 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.442 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-23 14:12:13.442 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.462 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:13.472 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:13.472 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:13.473 [main] TwoPhaseLoad - Resolving attributes for [User#2]
[DEBUG] 2021-03-23 14:12:13.473 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:13.473 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.473 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-03-23 14:12:13.473 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.473 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:13.487 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.487 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:13.487 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.487 [main] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-03-23 14:12:13.487 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:13.487 [main] TwoPhaseLoad - Done materializing entity [User#2]
[DEBUG] 2021-03-23 14:12:13.487 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:13.487 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#2
[DEBUG] 2021-03-23 14:12:13.488 [main] TwoPhaseLoad - Done materializing entity [Book#4]
[DEBUG] 2021-03-23 14:12:13.494 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:12:15.943 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2021-03-23 14:12:16.081 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2021-03-23 14:12:16.095 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:16.117 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-23 14:12:16.118 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:16.118 [main] FromElement - FromClause{level=1} : Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-23 14:12:16.137 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:16.137 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:16.138 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) )
[DEBUG] 2021-03-23 14:12:16.138 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-23 14:12:16.138 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:16.138 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=Book}}

[DEBUG] 2021-03-23 14:12:16.138 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:16.163 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2021-03-23 14:12:16.163 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-23 14:12:16.164 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:16.250 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-23 14:12:16.694 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:12:16.699 [main] Loader - Result row: EntityKey[Book#1]
[DEBUG] 2021-03-23 14:12:16.727 [main] Loader - Result set row: 1
[DEBUG] 2021-03-23 14:12:16.727 [main] Loader - Result row: EntityKey[Book#2]
[DEBUG] 2021-03-23 14:12:16.732 [main] Loader - Result set row: 2
[DEBUG] 2021-03-23 14:12:16.732 [main] Loader - Result row: EntityKey[Book#3]
[DEBUG] 2021-03-23 14:12:16.732 [main] Loader - Result set row: 3
[DEBUG] 2021-03-23 14:12:16.739 [main] Loader - Result row: EntityKey[Book#4]
[DEBUG] 2021-03-23 14:12:16.739 [main] TwoPhaseLoad - Resolving attributes for [Book#1]
[DEBUG] 2021-03-23 14:12:16.739 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-23 14:12:16.756 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:16.769 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:17.198 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.206 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.231 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:12:17.231 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:12:17.231 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.241 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:12:17.241 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.242 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:12:17.242 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.242 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#1
[DEBUG] 2021-03-23 14:12:17.243 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:17.243 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.256 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:17.291 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.291 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.340 [main] TwoPhaseLoad - Resolving attributes for [Genre#1]
[DEBUG] 2021-03-23 14:12:17.340 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-23 14:12:17.340 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.340 [main] TwoPhaseLoad - Done materializing entity [Genre#1]
[DEBUG] 2021-03-23 14:12:17.340 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.340 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#1
[DEBUG] 2021-03-23 14:12:17.341 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-23 14:12:17.341 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.341 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-23 14:12:17.341 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.341 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:17.341 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.341 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:17.359 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.368 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.396 [main] TwoPhaseLoad - Resolving attributes for [User#1]
[DEBUG] 2021-03-23 14:12:17.396 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:17.396 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.396 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-23 14:12:17.411 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.412 [main] TwoPhaseLoad - Done materializing entity [User#1]
[DEBUG] 2021-03-23 14:12:17.412 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.412 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#1
[DEBUG] 2021-03-23 14:12:17.412 [main] TwoPhaseLoad - Done materializing entity [Book#1]
[DEBUG] 2021-03-23 14:12:17.412 [main] TwoPhaseLoad - Resolving attributes for [Book#2]
[DEBUG] 2021-03-23 14:12:17.412 [main] TwoPhaseLoad - Processing attribute `author` : value = 4
[DEBUG] 2021-03-23 14:12:17.412 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.412 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:17.470 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.470 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.470 [main] TwoPhaseLoad - Resolving attributes for [Author#4]
[DEBUG] 2021-03-23 14:12:17.470 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-23 14:12:17.470 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.479 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-23 14:12:17.479 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.479 [main] TwoPhaseLoad - Done materializing entity [Author#4]
[DEBUG] 2021-03-23 14:12:17.479 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.479 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#4
[DEBUG] 2021-03-23 14:12:17.492 [main] TwoPhaseLoad - Processing attribute `genre` : value = 2
[DEBUG] 2021-03-23 14:12:17.492 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.492 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:17.501 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.503 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.504 [main] TwoPhaseLoad - Resolving attributes for [Genre#2]
[DEBUG] 2021-03-23 14:12:17.504 [main] TwoPhaseLoad - Processing attribute `name` : value = Science Fiction
[DEBUG] 2021-03-23 14:12:17.504 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.504 [main] TwoPhaseLoad - Done materializing entity [Genre#2]
[DEBUG] 2021-03-23 14:12:17.504 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.504 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#2
[DEBUG] 2021-03-23 14:12:17.508 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0765365279
[DEBUG] 2021-03-23 14:12:17.509 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.509 [main] TwoPhaseLoad - Processing attribute `title` : value = The Way of Kings
[DEBUG] 2021-03-23 14:12:17.509 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.509 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-23 14:12:17.509 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.509 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:17.536 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.536 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Resolving attributes for [User#4]
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-03-23 14:12:17.537 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.538 [main] TwoPhaseLoad - Done materializing entity [User#4]
[DEBUG] 2021-03-23 14:12:17.538 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.538 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#4
[DEBUG] 2021-03-23 14:12:17.538 [main] TwoPhaseLoad - Done materializing entity [Book#2]
[DEBUG] 2021-03-23 14:12:17.538 [main] TwoPhaseLoad - Resolving attributes for [Book#3]
[DEBUG] 2021-03-23 14:12:17.538 [main] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-03-23 14:12:17.538 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.538 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:17.544 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.544 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.585 [main] TwoPhaseLoad - Resolving attributes for [Author#5]
[DEBUG] 2021-03-23 14:12:17.585 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-23 14:12:17.585 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.585 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-23 14:12:17.585 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.585 [main] TwoPhaseLoad - Done materializing entity [Author#5]
[DEBUG] 2021-03-23 14:12:17.585 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.596 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#5
[DEBUG] 2021-03-23 14:12:17.596 [main] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-03-23 14:12:17.602 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.602 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:17.644 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.645 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.665 [main] TwoPhaseLoad - Resolving attributes for [Genre#5]
[DEBUG] 2021-03-23 14:12:17.665 [main] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-03-23 14:12:17.665 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.665 [main] TwoPhaseLoad - Done materializing entity [Genre#5]
[DEBUG] 2021-03-23 14:12:17.665 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.665 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#5
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0425259856
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Done materializing entity [Book#3]
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Resolving attributes for [Book#4]
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Processing attribute `author` : value = 3
[DEBUG] 2021-03-23 14:12:17.666 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.679 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:17.693 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.694 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.713 [main] TwoPhaseLoad - Resolving attributes for [Author#3]
[DEBUG] 2021-03-23 14:12:17.714 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-23 14:12:17.714 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.714 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-23 14:12:17.714 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.718 [main] TwoPhaseLoad - Done materializing entity [Author#3]
[DEBUG] 2021-03-23 14:12:17.718 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.720 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#3
[DEBUG] 2021-03-23 14:12:17.720 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:17.721 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.721 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0743566575
[DEBUG] 2021-03-23 14:12:17.721 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.738 [main] TwoPhaseLoad - Processing attribute `title` : value = City of Bones
[DEBUG] 2021-03-23 14:12:17.739 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.740 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-23 14:12:17.740 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.752 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:17.771 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:17.771 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Resolving attributes for [User#2]
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.772 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:17.818 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.819 [main] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-03-23 14:12:17.819 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:17.819 [main] TwoPhaseLoad - Done materializing entity [User#2]
[DEBUG] 2021-03-23 14:12:17.819 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:17.819 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#2
[DEBUG] 2021-03-23 14:12:17.819 [main] TwoPhaseLoad - Done materializing entity [Book#4]
[DEBUG] 2021-03-23 14:12:17.836 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:12:20.693 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.author=1
[DEBUG] 2021-03-23 14:12:20.779 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.author=1
[DEBUG] 2021-03-23 14:12:20.889 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:20.968 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'author'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-03-23 14:12:21.215 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:21.232 [main] FromElement - FromClause{level=1} : Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-23 14:12:21.237 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:21.238 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:21.238 [main] DotNode - getDataType() : author -> org.hibernate.type.ManyToOneType(Author)
[DEBUG] 2021-03-23 14:12:21.238 [main] DotNode - dereferenceShortcut() : property author in Book does not require a join.
[DEBUG] 2021-03-23 14:12:21.238 [main] DotNode - Terminal getPropertyPath = [author]
[DEBUG] 2021-03-23 14:12:21.238 [main] FromReferenceNode - Resolved : generatedAlias0.author -> book0_.author_id
[DEBUG] 2021-03-23 14:12:21.238 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:21.238 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.author_id book0_.id author ) 1 ) ) )
[DEBUG] 2021-03-23 14:12:21.253 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-23 14:12:21.266 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:21.267 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.author_id' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=book0_,className=Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'author' {originalText=author}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-03-23 14:12:21.267 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:21.267 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.author=1
[DEBUG] 2021-03-23 14:12:21.267 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.author_id=1
[DEBUG] 2021-03-23 14:12:21.267 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:21.403 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.author_id=1
[DEBUG] 2021-03-23 14:12:21.778 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:12:21.814 [main] Loader - Result row: EntityKey[Book#1]
[DEBUG] 2021-03-23 14:12:21.901 [main] TwoPhaseLoad - Resolving attributes for [Book#1]
[DEBUG] 2021-03-23 14:12:21.901 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-23 14:12:21.958 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:21.961 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:22.095 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:22.109 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:22.122 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:12:22.122 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:12:22.122 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.122 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:12:22.122 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.123 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:12:22.123 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:22.123 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#1
[DEBUG] 2021-03-23 14:12:22.123 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:22.123 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.123 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:22.156 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:22.157 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:22.215 [main] TwoPhaseLoad - Resolving attributes for [Genre#1]
[DEBUG] 2021-03-23 14:12:22.236 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Done materializing entity [Genre#1]
[DEBUG] 2021-03-23 14:12:22.237 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:22.237 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#1
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:22.237 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.237 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:22.249 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:22.249 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Resolving attributes for [User#1]
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:22.261 [main] TwoPhaseLoad - Done materializing entity [User#1]
[DEBUG] 2021-03-23 14:12:22.261 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:22.262 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#1
[DEBUG] 2021-03-23 14:12:22.262 [main] TwoPhaseLoad - Done materializing entity [Book#1]
[DEBUG] 2021-03-23 14:12:22.262 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:12:25.186 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-03-23 14:12:25.297 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-03-23 14:12:25.298 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:25.399 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-03-23 14:12:25.401 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:25.402 [main] FromElement - FromClause{level=1} : Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-23 14:12:25.402 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:25.402 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:25.402 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(User)
[DEBUG] 2021-03-23 14:12:25.402 [main] DotNode - dereferenceShortcut() : property user in Book does not require a join.
[DEBUG] 2021-03-23 14:12:25.425 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2021-03-23 14:12:25.431 [main] FromReferenceNode - Resolved : generatedAlias0.user -> book0_.user_id
[DEBUG] 2021-03-23 14:12:25.432 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:25.432 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.user_id book0_.id user ) 1 ) ) )
[DEBUG] 2021-03-23 14:12:25.444 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-23 14:12:25.448 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:25.453 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=book0_,className=Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-03-23 14:12:25.453 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:25.466 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-03-23 14:12:25.466 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-03-23 14:12:25.466 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:25.512 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-03-23 14:12:25.744 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:12:25.754 [main] Loader - Result row: EntityKey[Book#1]
[DEBUG] 2021-03-23 14:12:25.774 [main] Loader - Result set row: 1
[DEBUG] 2021-03-23 14:12:25.774 [main] Loader - Result row: EntityKey[Book#3]
[DEBUG] 2021-03-23 14:12:25.794 [main] TwoPhaseLoad - Resolving attributes for [Book#1]
[DEBUG] 2021-03-23 14:12:25.795 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-23 14:12:25.829 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:25.852 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:25.974 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:25.979 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:25.987 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:12:25.987 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:12:25.994 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.003 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:12:26.003 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.004 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:12:26.004 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:26.010 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#1
[DEBUG] 2021-03-23 14:12:26.010 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:26.010 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.010 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:26.035 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:26.035 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:26.042 [main] TwoPhaseLoad - Resolving attributes for [Genre#1]
[DEBUG] 2021-03-23 14:12:26.042 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-23 14:12:26.042 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.042 [main] TwoPhaseLoad - Done materializing entity [Genre#1]
[DEBUG] 2021-03-23 14:12:26.042 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:26.043 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#1
[DEBUG] 2021-03-23 14:12:26.043 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-23 14:12:26.043 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.043 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-23 14:12:26.043 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.043 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:26.072 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.073 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:26.083 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:26.112 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:26.123 [main] TwoPhaseLoad - Resolving attributes for [User#1]
[DEBUG] 2021-03-23 14:12:26.124 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.138 [main] TwoPhaseLoad - Done materializing entity [User#1]
[DEBUG] 2021-03-23 14:12:26.146 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:26.146 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#1
[DEBUG] 2021-03-23 14:12:26.146 [main] TwoPhaseLoad - Done materializing entity [Book#1]
[DEBUG] 2021-03-23 14:12:26.146 [main] TwoPhaseLoad - Resolving attributes for [Book#3]
[DEBUG] 2021-03-23 14:12:26.147 [main] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-03-23 14:12:26.147 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.147 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:26.171 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:26.171 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Resolving attributes for [Author#5]
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Done materializing entity [Author#5]
[DEBUG] 2021-03-23 14:12:26.172 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:26.172 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#5
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-03-23 14:12:26.172 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.201 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:26.220 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:26.221 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:26.221 [main] TwoPhaseLoad - Resolving attributes for [Genre#5]
[DEBUG] 2021-03-23 14:12:26.221 [main] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-03-23 14:12:26.221 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.221 [main] TwoPhaseLoad - Done materializing entity [Genre#5]
[DEBUG] 2021-03-23 14:12:26.221 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:26.221 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#5
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0425259856
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:26.222 [main] TwoPhaseLoad - Done materializing entity [Book#3]
[DEBUG] 2021-03-23 14:12:26.222 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-23 14:12:29.049 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-23 14:12:29.107 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-23 14:12:29.108 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:29.148 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-23 14:12:29.148 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:29.148 [main] FromElement - FromClause{level=1} : Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-23 14:12:29.148 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:29.148 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-23 14:12:29.148 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@1de4285e
[DEBUG] 2021-03-23 14:12:29.148 [main] FromReferenceNode - Resolved : generatedAlias0.title -> book0_.title
[DEBUG] 2021-03-23 14:12:29.149 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:29.149 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
[DEBUG] 2021-03-23 14:12:29.192 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-23 14:12:29.192 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-23 14:12:29.203 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1de4285e}

[DEBUG] 2021-03-23 14:12:29.203 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:29.211 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-23 14:12:29.211 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-23 14:12:29.211 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-23 14:12:29.364 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-23 14:12:29.547 [main] Loader - Result set row: 0
[DEBUG] 2021-03-23 14:12:29.555 [main] Loader - Result row: EntityKey[Book#1]
[DEBUG] 2021-03-23 14:12:29.579 [main] TwoPhaseLoad - Resolving attributes for [Book#1]
[DEBUG] 2021-03-23 14:12:29.579 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-23 14:12:29.579 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.626 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-23 14:12:29.643 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:29.643 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:29.674 [main] TwoPhaseLoad - Resolving attributes for [Author#1]
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Done materializing entity [Author#1]
[DEBUG] 2021-03-23 14:12:29.679 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:29.679 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Author#1
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-23 14:12:29.679 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.680 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-23 14:12:29.728 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:29.729 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:29.729 [main] TwoPhaseLoad - Resolving attributes for [Genre#1]
[DEBUG] 2021-03-23 14:12:29.729 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-23 14:12:29.729 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.729 [main] TwoPhaseLoad - Done materializing entity [Genre#1]
[DEBUG] 2021-03-23 14:12:29.730 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:29.730 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : Genre#1
[DEBUG] 2021-03-23 14:12:29.730 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-23 14:12:29.730 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.730 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-23 14:12:29.730 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.730 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-23 14:12:29.730 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.730 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-23 14:12:29.795 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-23 14:12:29.795 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-23 14:12:29.795 [main] TwoPhaseLoad - Resolving attributes for [User#1]
[DEBUG] 2021-03-23 14:12:29.795 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-23 14:12:29.795 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.796 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-23 14:12:29.796 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.796 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-23 14:12:29.796 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.796 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-23 14:12:29.797 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.798 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-23 14:12:29.798 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-23 14:12:29.798 [main] TwoPhaseLoad - Done materializing entity [User#1]
[DEBUG] 2021-03-23 14:12:29.798 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-23 14:12:29.798 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : User#1
[DEBUG] 2021-03-23 14:12:29.798 [main] TwoPhaseLoad - Done materializing entity [Book#1]
[DEBUG] 2021-03-23 14:12:29.798 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
