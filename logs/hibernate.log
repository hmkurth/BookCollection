[DEBUG] 2021-03-22 13:13:19.182 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-22 13:13:19.221 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-22 13:13:19.267 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-22 13:13:19.721 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-22 13:13:19.738 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-22 13:13:20.410 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-03-22 13:13:20.412 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-03-22 13:13:20.449 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-22 13:13:21.938 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-22 13:13:22.111 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-22 13:13:22.119 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-22 13:13:22.228 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-22 13:13:22.406 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4096aa05
[DEBUG] 2021-03-22 13:13:22.411 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4096aa05
[DEBUG] 2021-03-22 13:13:22.412 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4096aa05
[DEBUG] 2021-03-22 13:13:22.413 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@184fb68d
[DEBUG] 2021-03-22 13:13:22.416 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71466383
[DEBUG] 2021-03-22 13:13:22.417 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@54bca971
[DEBUG] 2021-03-22 13:13:22.423 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7bca6fac
[DEBUG] 2021-03-22 13:13:22.423 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7bca6fac
[DEBUG] 2021-03-22 13:13:22.424 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7bca6fac
[DEBUG] 2021-03-22 13:13:22.429 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@31d6f3fe
[DEBUG] 2021-03-22 13:13:22.436 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@31d6f3fe
[DEBUG] 2021-03-22 13:13:22.436 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d6f3fe
[DEBUG] 2021-03-22 13:13:22.445 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@165e389b
[DEBUG] 2021-03-22 13:13:22.447 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@165e389b
[DEBUG] 2021-03-22 13:13:22.447 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@165e389b
[DEBUG] 2021-03-22 13:13:22.454 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@71f0b72e
[DEBUG] 2021-03-22 13:13:22.454 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@71f0b72e
[DEBUG] 2021-03-22 13:13:22.454 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71f0b72e
[DEBUG] 2021-03-22 13:13:22.457 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3681037
[DEBUG] 2021-03-22 13:13:22.461 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3681037
[DEBUG] 2021-03-22 13:13:22.461 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3681037
[DEBUG] 2021-03-22 13:13:22.470 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f3e7344
[DEBUG] 2021-03-22 13:13:22.470 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f3e7344
[DEBUG] 2021-03-22 13:13:22.472 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f3e7344
[DEBUG] 2021-03-22 13:13:22.476 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@782bf610
[DEBUG] 2021-03-22 13:13:22.477 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@782bf610
[DEBUG] 2021-03-22 13:13:22.481 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@782bf610
[DEBUG] 2021-03-22 13:13:22.484 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10895b16
[DEBUG] 2021-03-22 13:13:22.484 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10895b16
[DEBUG] 2021-03-22 13:13:22.489 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b9632d1
[DEBUG] 2021-03-22 13:13:22.490 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b9632d1
[DEBUG] 2021-03-22 13:13:22.492 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1846579f
[DEBUG] 2021-03-22 13:13:22.494 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1846579f
[DEBUG] 2021-03-22 13:13:22.499 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5fac521d
[DEBUG] 2021-03-22 13:13:22.500 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3abfe845
[DEBUG] 2021-03-22 13:13:22.503 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@24b4d544
[DEBUG] 2021-03-22 13:13:22.504 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@24b4d544
[DEBUG] 2021-03-22 13:13:22.506 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3a230001
[DEBUG] 2021-03-22 13:13:22.506 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3a230001
[DEBUG] 2021-03-22 13:13:22.515 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@b0fc838
[DEBUG] 2021-03-22 13:13:22.517 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b0fc838
[DEBUG] 2021-03-22 13:13:22.520 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2954b5ea
[DEBUG] 2021-03-22 13:13:22.520 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2954b5ea
[DEBUG] 2021-03-22 13:13:22.524 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3ab6678b
[DEBUG] 2021-03-22 13:13:22.524 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3ab6678b
[DEBUG] 2021-03-22 13:13:22.527 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@642505c7
[DEBUG] 2021-03-22 13:13:22.527 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@642505c7
[DEBUG] 2021-03-22 13:13:22.530 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@715d6168
[DEBUG] 2021-03-22 13:13:22.530 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@715d6168
[DEBUG] 2021-03-22 13:13:22.539 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@107f4980
[DEBUG] 2021-03-22 13:13:22.540 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@107f4980
[DEBUG] 2021-03-22 13:13:22.545 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f08fdce
[DEBUG] 2021-03-22 13:13:22.546 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f08fdce
[DEBUG] 2021-03-22 13:13:22.547 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@17b6d426
[DEBUG] 2021-03-22 13:13:22.548 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17b6d426
[DEBUG] 2021-03-22 13:13:22.550 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2c58dcb1
[DEBUG] 2021-03-22 13:13:22.550 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2c58dcb1
[DEBUG] 2021-03-22 13:13:22.556 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e53b094
[DEBUG] 2021-03-22 13:13:22.557 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e53b094
[DEBUG] 2021-03-22 13:13:22.557 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e53b094
[DEBUG] 2021-03-22 13:13:22.559 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cf67838
[DEBUG] 2021-03-22 13:13:22.561 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@24934262
[DEBUG] 2021-03-22 13:13:22.561 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24934262
[DEBUG] 2021-03-22 13:13:22.561 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24934262
[DEBUG] 2021-03-22 13:13:22.566 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b051a5c
[DEBUG] 2021-03-22 13:13:22.569 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@10641c09
[DEBUG] 2021-03-22 13:13:22.569 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10641c09
[DEBUG] 2021-03-22 13:13:22.571 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@764cba
[DEBUG] 2021-03-22 13:13:22.576 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@764cba
[DEBUG] 2021-03-22 13:13:22.578 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@144ab54
[DEBUG] 2021-03-22 13:13:22.579 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@144ab54
[DEBUG] 2021-03-22 13:13:22.587 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e3861d7
[DEBUG] 2021-03-22 13:13:22.587 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e3861d7
[DEBUG] 2021-03-22 13:13:22.598 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47a7a101
[DEBUG] 2021-03-22 13:13:22.598 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47a7a101
[DEBUG] 2021-03-22 13:13:22.599 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@74dbb1ee
[DEBUG] 2021-03-22 13:13:22.602 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1aa6e3c0
[DEBUG] 2021-03-22 13:13:22.603 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1aa6e3c0
[DEBUG] 2021-03-22 13:13:22.603 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1aa6e3c0
[DEBUG] 2021-03-22 13:13:22.617 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2caa5d7c
[DEBUG] 2021-03-22 13:13:22.617 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2caa5d7c
[DEBUG] 2021-03-22 13:13:22.618 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2caa5d7c
[DEBUG] 2021-03-22 13:13:22.625 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@64968732
[DEBUG] 2021-03-22 13:13:22.626 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4d1f1ff5
[DEBUG] 2021-03-22 13:13:22.628 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5477a1ca
[DEBUG] 2021-03-22 13:13:22.628 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5477a1ca
[DEBUG] 2021-03-22 13:13:22.633 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5477a1ca
[DEBUG] 2021-03-22 13:13:22.642 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23eff5d1
[DEBUG] 2021-03-22 13:13:22.642 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23eff5d1
[DEBUG] 2021-03-22 13:13:22.643 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23eff5d1
[DEBUG] 2021-03-22 13:13:22.643 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d199c68
[DEBUG] 2021-03-22 13:13:22.644 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@216914
[DEBUG] 2021-03-22 13:13:22.653 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@408e96d9
[DEBUG] 2021-03-22 13:13:22.653 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@408e96d9
[DEBUG] 2021-03-22 13:13:22.657 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3901f6af
[DEBUG] 2021-03-22 13:13:22.667 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3724b43e
[DEBUG] 2021-03-22 13:13:22.667 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3724b43e
[DEBUG] 2021-03-22 13:13:22.678 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@199bc830
[DEBUG] 2021-03-22 13:13:22.678 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@199bc830
[DEBUG] 2021-03-22 13:13:22.679 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@790a251b
[DEBUG] 2021-03-22 13:13:22.681 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e15bb06
[DEBUG] 2021-03-22 13:13:22.683 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@72456279
[DEBUG] 2021-03-22 13:13:22.692 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4fc142ec
[DEBUG] 2021-03-22 13:13:22.693 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4fc142ec
[DEBUG] 2021-03-22 13:13:22.711 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e048149
[DEBUG] 2021-03-22 13:13:22.716 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79d9214d
[DEBUG] 2021-03-22 13:13:22.717 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d5790ea
[DEBUG] 2021-03-22 13:13:22.720 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1dd7796b
[DEBUG] 2021-03-22 13:13:22.721 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67a3bd51
[DEBUG] 2021-03-22 13:13:22.721 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57402ba1
[DEBUG] 2021-03-22 13:13:22.721 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56913163
[DEBUG] 2021-03-22 13:13:22.722 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@702b06fb
[DEBUG] 2021-03-22 13:13:22.850 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-22 13:13:22.851 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-22 13:13:22.853 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-22 13:13:22.853 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-22 13:13:22.854 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-22 13:13:22.855 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-22 13:13:22.856 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-22 13:13:22.857 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-22 13:13:22.862 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-22 13:13:22.866 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-22 13:13:22.867 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-22 13:13:22.867 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-22 13:13:22.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-22 13:13:22.873 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-22 13:13:22.891 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_BookCollection
[INFO ] 2021-03-22 13:13:22.891 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-22 13:13:22.891 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-22 13:13:23.299 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-22 13:13:23.679 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-22 13:13:23.679 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-03-22 13:13:23.679 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-22 13:13:23.847 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-22 13:13:23.891 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-22 13:13:23.967 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-22 13:13:24.204 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-22 13:13:24.210 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61f6d381] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@656922a0]
[DEBUG] 2021-03-22 13:13:24.349 [main] AnnotationBinder - Binding entity from annotated class: entity.Author
[DEBUG] 2021-03-22 13:13:24.396 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:13:24.404 [main] EntityBinder - Import with entity name Author
[DEBUG] 2021-03-22 13:13:24.409 [main] EntityBinder - Bind entity entity.Author on table author
[DEBUG] 2021-03-22 13:13:24.492 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.501 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:13:24.505 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
[DEBUG] 2021-03-22 13:13:24.512 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:13:24.524 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:13:24.539 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:13:24.541 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.549 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-22 13:13:24.550 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:firstName]
[DEBUG] 2021-03-22 13:13:24.551 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-22 13:13:24.551 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-22 13:13:24.555 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.556 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-22 13:13:24.556 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:lastName]
[DEBUG] 2021-03-22 13:13:24.557 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-22 13:13:24.557 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-22 13:13:24.569 [main] AnnotationBinder - Binding entity from annotated class: entity.Book
[DEBUG] 2021-03-22 13:13:24.572 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:13:24.573 [main] EntityBinder - Import with entity name Book
[DEBUG] 2021-03-22 13:13:24.573 [main] EntityBinder - Bind entity entity.Book on table book
[DEBUG] 2021-03-22 13:13:24.594 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.595 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:13:24.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
[DEBUG] 2021-03-22 13:13:24.595 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:13:24.596 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:13:24.596 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:13:24.603 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-22 13:13:24.604 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.619 [main] PropertyBinder - Building property author
[DEBUG] 2021-03-22 13:13:24.625 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-22 13:13:24.626 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.627 [main] PropertyBinder - Building property genre
[DEBUG] 2021-03-22 13:13:24.627 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.628 [main] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-03-22 13:13:24.628 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:isbn]
[DEBUG] 2021-03-22 13:13:24.628 [main] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-03-22 13:13:24.631 [main] PropertyBinder - Building property isbn
[DEBUG] 2021-03-22 13:13:24.632 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.641 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-03-22 13:13:24.641 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:title]
[DEBUG] 2021-03-22 13:13:24.641 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-03-22 13:13:24.641 [main] PropertyBinder - Building property title
[DEBUG] 2021-03-22 13:13:24.643 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-22 13:13:24.647 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.648 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-22 13:13:24.648 [main] AnnotationBinder - Binding entity from annotated class: entity.Genre
[DEBUG] 2021-03-22 13:13:24.649 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:13:24.649 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2021-03-22 13:13:24.649 [main] EntityBinder - Bind entity entity.Genre on table genre
[DEBUG] 2021-03-22 13:13:24.650 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.650 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:13:24.650 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:id]
[DEBUG] 2021-03-22 13:13:24.650 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:13:24.651 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:13:24.651 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:13:24.651 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.651 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-03-22 13:13:24.651 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:name]
[DEBUG] 2021-03-22 13:13:24.651 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-03-22 13:13:24.652 [main] PropertyBinder - Building property name
[DEBUG] 2021-03-22 13:13:24.652 [main] AnnotationBinder - Binding entity from annotated class: entity.User
[DEBUG] 2021-03-22 13:13:24.652 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:13:24.652 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-03-22 13:13:24.661 [main] EntityBinder - Bind entity entity.User on table user
[DEBUG] 2021-03-22 13:13:24.665 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.665 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:13:24.666 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:id]
[DEBUG] 2021-03-22 13:13:24.666 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:13:24.666 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:13:24.667 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:13:24.667 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.667 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-03-22 13:13:24.669 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:email]
[DEBUG] 2021-03-22 13:13:24.669 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-03-22 13:13:24.669 [main] PropertyBinder - Building property email
[DEBUG] 2021-03-22 13:13:24.669 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.672 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-22 13:13:24.673 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:firstName]
[DEBUG] 2021-03-22 13:13:24.673 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-22 13:13:24.673 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-22 13:13:24.674 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.674 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-22 13:13:24.674 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:lastName]
[DEBUG] 2021-03-22 13:13:24.674 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-22 13:13:24.674 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-22 13:13:24.675 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.676 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-03-22 13:13:24.677 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:password]
[DEBUG] 2021-03-22 13:13:24.677 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-03-22 13:13:24.677 [main] PropertyBinder - Building property password
[DEBUG] 2021-03-22 13:13:24.677 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:13:24.679 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-03-22 13:13:24.686 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:userName]
[DEBUG] 2021-03-22 13:13:24.687 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-03-22 13:13:24.687 [main] PropertyBinder - Building property userName
[DEBUG] 2021-03-22 13:13:24.691 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:13:24.695 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-22 13:13:24.696 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-22 13:13:24.697 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:13:24.699 [main] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-03-22 13:13:24.699 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-03-22 13:13:24.701 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:13:24.701 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-03-22 13:13:24.701 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:13:24.701 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-03-22 13:13:24.702 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-22 13:13:24.702 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-22 13:13:24.702 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-03-22 13:13:24.702 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-03-22 13:13:24.728 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-03-22 13:13:24.733 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-03-22 13:13:24.734 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-03-22 13:13:24.734 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-03-22 13:13:24.734 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-22 13:13:24.742 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-22 13:13:24.742 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-22 13:13:24.751 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-22 13:13:24.752 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-22 13:13:24.752 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-22 13:13:24.896 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-22 13:13:24.898 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-22 13:13:24.898 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-22 13:13:24.898 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-22 13:13:24.899 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-22 13:13:24.901 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-22 13:13:24.901 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-22 13:13:24.901 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-22 13:13:24.901 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-22 13:13:24.901 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-22 13:13:24.902 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-22 13:13:24.902 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-22 13:13:24.902 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-22 13:13:24.905 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-22 13:13:24.905 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-22 13:13:24.905 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-22 13:13:24.905 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-22 13:13:24.905 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-22 13:13:24.906 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-22 13:13:24.907 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-22 13:13:24.907 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-22 13:13:24.907 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-22 13:13:24.907 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-22 13:13:24.907 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-22 13:13:24.907 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-22 13:13:25.129 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-22 13:13:25.192 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-22 13:13:25.194 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/BookCollection/target/test-classes:/home/student/IdeaProjects/BookCollection/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/home/student/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/home/student/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/student/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/student/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 test.persistence.BookDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-01-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-67-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_BookCollection, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.10, user.dir=/home/student/IdeaProjects/BookCollection, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6dee8ae6, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_BookCollection, java.class.version=55.0}
[DEBUG] 2021-03-22 13:13:25.281 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-22 13:13:25.281 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-22 13:13:25.283 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-22 13:13:25.283 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61f6d381] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7bc6935c]
[DEBUG] 2021-03-22 13:13:25.616 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-22 13:13:25.621 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-22 13:13:25.671 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-22 13:13:25.671 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-22 13:13:26.753 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-22 13:13:26.754 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-22 13:13:26.754 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-22 13:13:26.755 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-22 13:13:26.785 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-22 13:13:26.789 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-22 13:13:26.789 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-22 13:13:26.789 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-22 13:13:26.847 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-22 13:13:26.847 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-22 13:13:26.850 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-22 13:13:26.851 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-22 13:13:27.000 [main] AbstractEntityPersister - Static SQL for entity: entity.User
[DEBUG] 2021-03-22 13:13:27.004 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-03-22 13:13:27.005 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_3_, user_.first_name as first_na3_3_, user_.last_name as last_nam4_3_, user_.password as password5_3_, user_.username as username6_3_ from user user_ where user_.id=?
[DEBUG] 2021-03-22 13:13:27.005 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:13:27.005 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-03-22 13:13:27.006 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-03-22 13:13:27.006 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:13:27.071 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49a38b1]
[DEBUG] 2021-03-22 13:13:27.077 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-22 13:13:27.077 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:13:27.077 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:13:27.077 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-22 13:13:27.077 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-22 13:13:27.078 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.102 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.111 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-22 13:13:27.119 [main] EntityLoader - Static select for entity entity.User [NONE]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:27.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd74223]
[DEBUG] 2021-03-22 13:13:27.122 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-22 13:13:27.122 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:13:27.122 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:13:27.123 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-22 13:13:27.123 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-22 13:13:27.123 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.126 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.126 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-22 13:13:27.126 [main] EntityLoader - Static select for entity entity.User [READ]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:27.219 [main] Loader - Static select for action ACTION_MERGE on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:27.221 [main] Loader - Static select for action ACTION_REFRESH on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:27.221 [main] AbstractEntityPersister - Static SQL for entity: entity.Genre
[DEBUG] 2021-03-22 13:13:27.222 [main] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-03-22 13:13:27.223 [main] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-03-22 13:13:27.223 [main] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-03-22 13:13:27.223 [main] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-03-22 13:13:27.223 [main] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-03-22 13:13:27.223 [main] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-03-22 13:13:27.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@785ed99c]
[DEBUG] 2021-03-22 13:13:27.223 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-22 13:13:27.224 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.224 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.225 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-22 13:13:27.228 [main] EntityLoader - Static select for entity entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:27.228 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@755b5f30]
[DEBUG] 2021-03-22 13:13:27.229 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-22 13:13:27.230 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.236 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.237 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-22 13:13:27.237 [main] EntityLoader - Static select for entity entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:27.244 [main] Loader - Static select for action ACTION_MERGE on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:27.245 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:27.247 [main] AbstractEntityPersister - Static SQL for entity: entity.Author
[DEBUG] 2021-03-22 13:13:27.247 [main] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-03-22 13:13:27.247 [main] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2021-03-22 13:13:27.248 [main] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2021-03-22 13:13:27.248 [main] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-22 13:13:27.248 [main] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-03-22 13:13:27.248 [main] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-22 13:13:27.248 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272778ae]
[DEBUG] 2021-03-22 13:13:27.249 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:13:27.249 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:13:27.249 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.250 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.251 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-22 13:13:27.262 [main] EntityLoader - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:27.262 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c18942]
[DEBUG] 2021-03-22 13:13:27.262 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:13:27.262 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:13:27.263 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.263 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.264 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-22 13:13:27.264 [main] EntityLoader - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:27.264 [main] Loader - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:27.265 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:27.269 [main] AbstractEntityPersister - Static SQL for entity: entity.Book
[DEBUG] 2021-03-22 13:13:27.270 [main] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-03-22 13:13:27.270 [main] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i4_1_, book_.genre_id as genre_id5_1_, book_.isbn as isbn2_1_, book_.title as title3_1_, book_.user_id as user_id6_1_ from book book_ where book_.id=?
[DEBUG] 2021-03-22 13:13:27.270 [main] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, title, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:13:27.270 [main] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, title=?, user_id=? where id=?
[DEBUG] 2021-03-22 13:13:27.272 [main] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-03-22 13:13:27.272 [main] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, title, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:13:27.272 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6842c101]
[DEBUG] 2021-03-22 13:13:27.272 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-22 13:13:27.291 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3009eed7]
[DEBUG] 2021-03-22 13:13:27.296 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-22 13:13:27.296 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-22 13:13:27.296 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-22 13:13:27.297 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1a412e]
[DEBUG] 2021-03-22 13:13:27.297 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-22 13:13:27.301 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-22 13:13:27.301 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-22 13:13:27.301 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-22 13:13:27.301 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd43e58]
[DEBUG] 2021-03-22 13:13:27.302 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-22 13:13:27.302 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-22 13:13:27.302 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-22 13:13:27.303 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-22 13:13:27.303 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-22 13:13:27.303 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.303 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.309 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-22 13:13:27.309 [main] EntityLoader - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-22 13:13:27.310 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79252c83]
[DEBUG] 2021-03-22 13:13:27.310 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-22 13:13:27.311 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@509a6095]
[DEBUG] 2021-03-22 13:13:27.315 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-22 13:13:27.317 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-22 13:13:27.318 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-22 13:13:27.318 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75bd28d]
[DEBUG] 2021-03-22 13:13:27.318 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-22 13:13:27.318 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-22 13:13:27.318 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-22 13:13:27.319 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-22 13:13:27.319 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11810917]
[DEBUG] 2021-03-22 13:13:27.319 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-22 13:13:27.320 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-22 13:13:27.320 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-22 13:13:27.320 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-22 13:13:27.320 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-22 13:13:27.321 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:13:27.322 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:13:27.324 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-22 13:13:27.325 [main] EntityLoader - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-22 13:13:27.327 [main] Loader - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-22 13:13:27.333 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-22 13:13:27.385 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-22 13:13:27.387 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-22 13:13:27.388 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-22 13:13:27.398 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-22 13:13:27.398 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-22 13:13:27.399 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-22 13:13:27.399 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-22 13:13:27.402 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ad3f70a
[DEBUG] 2021-03-22 13:13:27.405 [main] SessionFactoryRegistry - Registering SessionFactory: e047e421-35a7-440c-b5c1-11991a6733bf (<unnamed>)
[DEBUG] 2021-03-22 13:13:27.406 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-22 13:13:27.673 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-22 13:13:27.777 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=1
[DEBUG] 2021-03-22 13:13:27.794 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@372954e1
[DEBUG] 2021-03-22 13:13:27.830 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.genre=1
[DEBUG] 2021-03-22 13:13:27.845 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:27.877 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-03-22 13:13:27.928 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:27.982 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:13:27.986 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:27.992 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:27.993 [main] DotNode - getDataType() : genre -> org.hibernate.type.ManyToOneType(entity.Genre)
[DEBUG] 2021-03-22 13:13:27.997 [main] DotNode - dereferenceShortcut() : property genre in entity.Book does not require a join.
[DEBUG] 2021-03-22 13:13:27.997 [main] DotNode - Terminal getPropertyPath = [genre]
[DEBUG] 2021-03-22 13:13:27.997 [main] FromReferenceNode - Resolved : generatedAlias0.genre -> book0_.genre_id
[DEBUG] 2021-03-22 13:13:28.003 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:28.006 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) 1 ) ) )
[DEBUG] 2021-03-22 13:13:28.045 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:13:28.045 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:28.047 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-03-22 13:13:28.048 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:28.071 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.genre=1
[DEBUG] 2021-03-22 13:13:28.071 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.genre_id=1
[DEBUG] 2021-03-22 13:13:28.071 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:28.129 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.genre_id=1
[DEBUG] 2021-03-22 13:13:28.216 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:13:28.228 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:13:28.262 [main] Loader - Result set row: 1
[DEBUG] 2021-03-22 13:13:28.265 [main] Loader - Result row: EntityKey[entity.Book#4]
[DEBUG] 2021-03-22 13:13:28.269 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:13:28.271 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:13:28.271 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.295 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:28.308 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.311 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.313 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:13:28.313 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:13:28.313 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.321 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:13:28.321 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.324 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:13:28.332 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.333 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:13:28.338 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:28.344 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.344 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:28.354 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.354 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.357 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:28.359 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:13:28.359 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.359 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:28.359 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.360 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:13:28.360 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:13:28.360 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.360 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:13:28.360 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.360 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:28.361 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.361 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:28.375 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.375 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.375 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.376 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:13:28.376 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.379 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:13:28.379 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:13:28.379 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#4]
[DEBUG] 2021-03-22 13:13:28.379 [main] TwoPhaseLoad - Processing attribute `author` : value = 3
[DEBUG] 2021-03-22 13:13:28.379 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.380 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:28.389 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.390 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.390 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-22 13:13:28.390 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-22 13:13:28.390 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.390 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-22 13:13:28.390 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.390 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-22 13:13:28.390 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.391 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#3
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0743566575
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Processing attribute `title` : value = City of Bones
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-22 13:13:28.391 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.392 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:28.403 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.404 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.404 [main] TwoPhaseLoad - Resolving attributes for [entity.User#2]
[DEBUG] 2021-03-22 13:13:28.404 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:28.404 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.404 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-03-22 13:13:28.404 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.411 [main] TwoPhaseLoad - Done materializing entity [entity.User#2]
[DEBUG] 2021-03-22 13:13:28.411 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.411 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#2
[DEBUG] 2021-03-22 13:13:28.412 [main] TwoPhaseLoad - Done materializing entity [entity.Book#4]
[DEBUG] 2021-03-22 13:13:28.422 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-22 13:13:28.896 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2021-03-22 13:13:28.897 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0
[DEBUG] 2021-03-22 13:13:28.901 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:28.902 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-22 13:13:28.902 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:28.903 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:13:28.903 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:28.905 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:28.905 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) )
[DEBUG] 2021-03-22 13:13:28.905 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:13:28.906 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:28.906 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}

[DEBUG] 2021-03-22 13:13:28.906 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:28.909 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0
[DEBUG] 2021-03-22 13:13:28.909 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-22 13:13:28.909 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:28.910 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-22 13:13:28.918 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:13:28.926 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:13:28.926 [main] Loader - Result set row: 1
[DEBUG] 2021-03-22 13:13:28.926 [main] Loader - Result row: EntityKey[entity.Book#2]
[DEBUG] 2021-03-22 13:13:28.930 [main] Loader - Result set row: 2
[DEBUG] 2021-03-22 13:13:28.930 [main] Loader - Result row: EntityKey[entity.Book#3]
[DEBUG] 2021-03-22 13:13:28.930 [main] Loader - Result set row: 3
[DEBUG] 2021-03-22 13:13:28.930 [main] Loader - Result row: EntityKey[entity.Book#4]
[DEBUG] 2021-03-22 13:13:28.932 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:13:28.932 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:13:28.933 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.933 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:28.935 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.935 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.935 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:13:28.936 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.936 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:28.936 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.936 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:28.945 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.946 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.946 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:28.946 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:13:28.946 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.951 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:28.951 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.952 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:13:28.952 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:13:28.952 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.952 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:13:28.952 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.952 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:28.952 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.952 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:28.958 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.958 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:13:28.959 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.959 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:13:28.959 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#2]
[DEBUG] 2021-03-22 13:13:28.960 [main] TwoPhaseLoad - Processing attribute `author` : value = 4
[DEBUG] 2021-03-22 13:13:28.960 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.960 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:28.968 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.968 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.969 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#4]
[DEBUG] 2021-03-22 13:13:28.969 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-22 13:13:28.969 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.969 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-22 13:13:28.969 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.973 [main] TwoPhaseLoad - Done materializing entity [entity.Author#4]
[DEBUG] 2021-03-22 13:13:28.974 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.974 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#4
[DEBUG] 2021-03-22 13:13:28.974 [main] TwoPhaseLoad - Processing attribute `genre` : value = 2
[DEBUG] 2021-03-22 13:13:28.974 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.974 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:28.976 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.976 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.979 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#2]
[DEBUG] 2021-03-22 13:13:28.979 [main] TwoPhaseLoad - Processing attribute `name` : value = Science Fiction
[DEBUG] 2021-03-22 13:13:28.979 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.979 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#2]
[DEBUG] 2021-03-22 13:13:28.979 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.983 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#2
[DEBUG] 2021-03-22 13:13:28.983 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0765365279
[DEBUG] 2021-03-22 13:13:28.984 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.984 [main] TwoPhaseLoad - Processing attribute `title` : value = The Way of Kings
[DEBUG] 2021-03-22 13:13:28.984 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.984 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-22 13:13:28.985 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.986 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:28.988 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.989 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Resolving attributes for [entity.User#4]
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.992 [main] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-03-22 13:13:28.993 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.993 [main] TwoPhaseLoad - Done materializing entity [entity.User#4]
[DEBUG] 2021-03-22 13:13:28.993 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:28.993 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#4
[DEBUG] 2021-03-22 13:13:28.993 [main] TwoPhaseLoad - Done materializing entity [entity.Book#2]
[DEBUG] 2021-03-22 13:13:28.993 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#3]
[DEBUG] 2021-03-22 13:13:28.993 [main] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-03-22 13:13:28.993 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.994 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:28.999 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:28.999 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:28.999 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#5]
[DEBUG] 2021-03-22 13:13:28.999 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-22 13:13:28.999 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:28.999 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-22 13:13:29.000 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.000 [main] TwoPhaseLoad - Done materializing entity [entity.Author#5]
[DEBUG] 2021-03-22 13:13:29.000 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.000 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#5
[DEBUG] 2021-03-22 13:13:29.000 [main] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-03-22 13:13:29.000 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.000 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:29.006 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:29.006 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:29.010 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#5]
[DEBUG] 2021-03-22 13:13:29.010 [main] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-03-22 13:13:29.010 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.011 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#5]
[DEBUG] 2021-03-22 13:13:29.011 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.011 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#5
[DEBUG] 2021-03-22 13:13:29.011 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0425259856
[DEBUG] 2021-03-22 13:13:29.011 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.011 [main] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-03-22 13:13:29.016 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.017 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:29.017 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.018 [main] TwoPhaseLoad - Done materializing entity [entity.Book#3]
[DEBUG] 2021-03-22 13:13:29.018 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#4]
[DEBUG] 2021-03-22 13:13:29.018 [main] TwoPhaseLoad - Processing attribute `author` : value = 3
[DEBUG] 2021-03-22 13:13:29.018 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.019 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:29.027 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:29.027 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:29.028 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-22 13:13:29.028 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-22 13:13:29.028 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.028 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-22 13:13:29.028 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.029 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-22 13:13:29.029 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.029 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#3
[DEBUG] 2021-03-22 13:13:29.029 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:29.030 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.030 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0743566575
[DEBUG] 2021-03-22 13:13:29.030 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.030 [main] TwoPhaseLoad - Processing attribute `title` : value = City of Bones
[DEBUG] 2021-03-22 13:13:29.030 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.036 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-22 13:13:29.036 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.039 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:29.050 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:29.050 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:29.065 [main] TwoPhaseLoad - Resolving attributes for [entity.User#2]
[DEBUG] 2021-03-22 13:13:29.065 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-03-22 13:13:29.066 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.067 [main] TwoPhaseLoad - Done materializing entity [entity.User#2]
[DEBUG] 2021-03-22 13:13:29.067 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.067 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#2
[DEBUG] 2021-03-22 13:13:29.079 [main] TwoPhaseLoad - Done materializing entity [entity.Book#4]
[DEBUG] 2021-03-22 13:13:29.080 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-22 13:13:29.630 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.author=1
[DEBUG] 2021-03-22 13:13:29.637 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.author=1
[DEBUG] 2021-03-22 13:13:29.638 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:29.645 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'author'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-03-22 13:13:29.645 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:29.645 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:13:29.645 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:29.645 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:29.646 [main] DotNode - getDataType() : author -> org.hibernate.type.ManyToOneType(entity.Author)
[DEBUG] 2021-03-22 13:13:29.646 [main] DotNode - dereferenceShortcut() : property author in entity.Book does not require a join.
[DEBUG] 2021-03-22 13:13:29.646 [main] DotNode - Terminal getPropertyPath = [author]
[DEBUG] 2021-03-22 13:13:29.646 [main] FromReferenceNode - Resolved : generatedAlias0.author -> book0_.author_id
[DEBUG] 2021-03-22 13:13:29.646 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:29.646 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.author_id book0_.id author ) 1 ) ) )
[DEBUG] 2021-03-22 13:13:29.646 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:13:29.646 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:29.647 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.author_id' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=book0_,className=entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'author' {originalText=author}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-03-22 13:13:29.647 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:29.647 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.author=1
[DEBUG] 2021-03-22 13:13:29.647 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.author_id=1
[DEBUG] 2021-03-22 13:13:29.647 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:29.647 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.author_id=1
[DEBUG] 2021-03-22 13:13:29.656 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:13:29.657 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:13:29.661 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:13:29.661 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:13:29.661 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.662 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:29.676 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:29.677 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:29.685 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:13:29.689 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:13:29.689 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.689 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:13:29.689 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.689 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:13:29.690 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.690 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:13:29.690 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:29.690 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.691 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:29.700 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:29.700 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:29.704 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:29.704 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:13:29.704 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.704 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:29.704 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.708 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:13:29.713 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:13:29.713 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.713 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:13:29.713 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.713 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:29.713 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.717 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:29.720 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:29.720 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:29.724 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:13:29.724 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:13:29.728 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:29.732 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:13:29.732 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:29.733 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:13:29.733 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:13:29.733 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-22 13:13:30.153 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-03-22 13:13:30.155 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-03-22 13:13:30.159 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:30.161 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-03-22 13:13:30.161 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:30.161 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:13:30.165 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:30.165 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:30.165 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(entity.User)
[DEBUG] 2021-03-22 13:13:30.167 [main] DotNode - dereferenceShortcut() : property user in entity.Book does not require a join.
[DEBUG] 2021-03-22 13:13:30.167 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2021-03-22 13:13:30.167 [main] FromReferenceNode - Resolved : generatedAlias0.user -> book0_.user_id
[DEBUG] 2021-03-22 13:13:30.167 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:30.168 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.user_id book0_.id user ) 1 ) ) )
[DEBUG] 2021-03-22 13:13:30.169 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:13:30.169 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:30.169 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=book0_,className=entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-03-22 13:13:30.169 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:30.169 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-03-22 13:13:30.169 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-03-22 13:13:30.170 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:30.170 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-03-22 13:13:30.177 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:13:30.184 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:13:30.186 [main] Loader - Result set row: 1
[DEBUG] 2021-03-22 13:13:30.186 [main] Loader - Result row: EntityKey[entity.Book#3]
[DEBUG] 2021-03-22 13:13:30.190 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:13:30.190 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:13:30.190 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.190 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:30.194 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.194 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.200 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:13:30.201 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:13:30.201 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.201 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:13:30.201 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.201 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:13:30.201 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.206 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:13:30.207 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:30.207 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.207 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:30.210 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.210 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.210 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:30.210 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:13:30.210 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.213 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:30.214 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.214 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:13:30.214 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:13:30.214 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.214 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:13:30.214 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.214 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:30.214 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.214 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:30.218 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.220 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:13:30.223 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.226 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:13:30.227 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.227 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:13:30.228 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:13:30.228 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#3]
[DEBUG] 2021-03-22 13:13:30.228 [main] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-03-22 13:13:30.228 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.228 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:30.231 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.233 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.233 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#5]
[DEBUG] 2021-03-22 13:13:30.233 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-22 13:13:30.233 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.233 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-22 13:13:30.233 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.235 [main] TwoPhaseLoad - Done materializing entity [entity.Author#5]
[DEBUG] 2021-03-22 13:13:30.235 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.235 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#5
[DEBUG] 2021-03-22 13:13:30.235 [main] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-03-22 13:13:30.235 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.235 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:30.239 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.240 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.241 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#5]
[DEBUG] 2021-03-22 13:13:30.242 [main] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#5]
[DEBUG] 2021-03-22 13:13:30.243 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.243 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#5
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0425259856
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:30.243 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.245 [main] TwoPhaseLoad - Done materializing entity [entity.Book#3]
[DEBUG] 2021-03-22 13:13:30.246 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-22 13:13:30.705 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-22 13:13:30.706 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-22 13:13:30.707 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:30.713 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-22 13:13:30.713 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:30.714 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:13:30.714 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:30.714 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:13:30.715 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@1846579f
[DEBUG] 2021-03-22 13:13:30.727 [main] FromReferenceNode - Resolved : generatedAlias0.title -> book0_.title
[DEBUG] 2021-03-22 13:13:30.734 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:30.734 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
[DEBUG] 2021-03-22 13:13:30.735 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:13:30.736 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:13:30.737 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1846579f}

[DEBUG] 2021-03-22 13:13:30.737 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:30.738 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-22 13:13:30.738 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-22 13:13:30.738 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:13:30.752 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-22 13:13:30.780 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:13:30.780 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:13:30.780 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:13:30.780 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:13:30.780 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.782 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:13:30.784 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.784 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.784 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:13:30.784 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:13:30.785 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.785 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:13:30.785 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.785 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:13:30.785 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.785 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:13:30.785 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:13:30.785 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.785 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:13:30.788 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.788 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.789 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:13:30.790 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.790 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:13:30.790 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.790 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:13:30.793 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:13:30.794 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:13:30.796 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:13:30.797 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:13:30.797 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:13:30.797 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:13:30.798 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:13:30.798 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
