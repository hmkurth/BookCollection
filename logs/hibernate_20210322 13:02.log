[DEBUG] 2021-03-22 13:01:59.400 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-22 13:01:59.461 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-22 13:01:59.501 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-22 13:02:00.257 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-22 13:02:00.270 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-22 13:02:01.693 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-03-22 13:02:01.698 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-03-22 13:02:01.729 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-22 13:02:03.023 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-22 13:02:03.129 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-22 13:02:03.137 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-22 13:02:03.224 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-22 13:02:03.406 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fbcfe81
[DEBUG] 2021-03-22 13:02:03.406 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fbcfe81
[DEBUG] 2021-03-22 13:02:03.407 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3fbcfe81
[DEBUG] 2021-03-22 13:02:03.408 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c5c616f
[DEBUG] 2021-03-22 13:02:03.411 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73437222
[DEBUG] 2021-03-22 13:02:03.414 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@57a2ed35
[DEBUG] 2021-03-22 13:02:03.416 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@71d8cfe7
[DEBUG] 2021-03-22 13:02:03.416 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@71d8cfe7
[DEBUG] 2021-03-22 13:02:03.416 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@71d8cfe7
[DEBUG] 2021-03-22 13:02:03.418 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@54bca971
[DEBUG] 2021-03-22 13:02:03.420 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@54bca971
[DEBUG] 2021-03-22 13:02:03.420 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54bca971
[DEBUG] 2021-03-22 13:02:03.424 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@11b377c5
[DEBUG] 2021-03-22 13:02:03.429 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@11b377c5
[DEBUG] 2021-03-22 13:02:03.429 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11b377c5
[DEBUG] 2021-03-22 13:02:03.434 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@23f3dbf0
[DEBUG] 2021-03-22 13:02:03.435 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@23f3dbf0
[DEBUG] 2021-03-22 13:02:03.435 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23f3dbf0
[DEBUG] 2021-03-22 13:02:03.437 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20a05b32
[DEBUG] 2021-03-22 13:02:03.438 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20a05b32
[DEBUG] 2021-03-22 13:02:03.438 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20a05b32
[DEBUG] 2021-03-22 13:02:03.440 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@763cf5b9
[DEBUG] 2021-03-22 13:02:03.440 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@763cf5b9
[DEBUG] 2021-03-22 13:02:03.443 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@763cf5b9
[DEBUG] 2021-03-22 13:02:03.446 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c35c345
[DEBUG] 2021-03-22 13:02:03.446 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c35c345
[DEBUG] 2021-03-22 13:02:03.447 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c35c345
[DEBUG] 2021-03-22 13:02:03.450 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69a2b3b6
[DEBUG] 2021-03-22 13:02:03.450 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69a2b3b6
[DEBUG] 2021-03-22 13:02:03.452 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@46731692
[DEBUG] 2021-03-22 13:02:03.453 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@46731692
[DEBUG] 2021-03-22 13:02:03.455 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@151ef57f
[DEBUG] 2021-03-22 13:02:03.456 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@151ef57f
[DEBUG] 2021-03-22 13:02:03.457 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4e17913b
[DEBUG] 2021-03-22 13:02:03.459 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b9632d1
[DEBUG] 2021-03-22 13:02:03.462 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1846579f
[DEBUG] 2021-03-22 13:02:03.462 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1846579f
[DEBUG] 2021-03-22 13:02:03.469 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7be7e15
[DEBUG] 2021-03-22 13:02:03.470 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7be7e15
[DEBUG] 2021-03-22 13:02:03.486 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2aa6311a
[DEBUG] 2021-03-22 13:02:03.487 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2aa6311a
[DEBUG] 2021-03-22 13:02:03.491 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d0ecb24
[DEBUG] 2021-03-22 13:02:03.492 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d0ecb24
[DEBUG] 2021-03-22 13:02:03.499 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7e00ed0f
[DEBUG] 2021-03-22 13:02:03.500 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7e00ed0f
[DEBUG] 2021-03-22 13:02:03.504 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@65753040
[DEBUG] 2021-03-22 13:02:03.504 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@65753040
[DEBUG] 2021-03-22 13:02:03.522 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e1459ea
[DEBUG] 2021-03-22 13:02:03.531 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e1459ea
[DEBUG] 2021-03-22 13:02:03.540 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@57c47a9e
[DEBUG] 2021-03-22 13:02:03.541 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@57c47a9e
[DEBUG] 2021-03-22 13:02:03.552 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52d6cd34
[DEBUG] 2021-03-22 13:02:03.552 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52d6cd34
[DEBUG] 2021-03-22 13:02:03.556 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6014a9ba
[DEBUG] 2021-03-22 13:02:03.556 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6014a9ba
[DEBUG] 2021-03-22 13:02:03.563 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@cbc8d0f
[DEBUG] 2021-03-22 13:02:03.563 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@cbc8d0f
[DEBUG] 2021-03-22 13:02:03.574 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5580d62f
[DEBUG] 2021-03-22 13:02:03.574 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5580d62f
[DEBUG] 2021-03-22 13:02:03.575 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5580d62f
[DEBUG] 2021-03-22 13:02:03.579 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@154bd49b
[DEBUG] 2021-03-22 13:02:03.585 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@472698d
[DEBUG] 2021-03-22 13:02:03.586 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@472698d
[DEBUG] 2021-03-22 13:02:03.587 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@472698d
[DEBUG] 2021-03-22 13:02:03.605 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76ddd61a
[DEBUG] 2021-03-22 13:02:03.612 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@33a3c44a
[DEBUG] 2021-03-22 13:02:03.617 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@33a3c44a
[DEBUG] 2021-03-22 13:02:03.619 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@28501a4b
[DEBUG] 2021-03-22 13:02:03.621 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28501a4b
[DEBUG] 2021-03-22 13:02:03.623 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@66c38e51
[DEBUG] 2021-03-22 13:02:03.624 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66c38e51
[DEBUG] 2021-03-22 13:02:03.628 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4422dd48
[DEBUG] 2021-03-22 13:02:03.628 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4422dd48
[DEBUG] 2021-03-22 13:02:03.630 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12968227
[DEBUG] 2021-03-22 13:02:03.631 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12968227
[DEBUG] 2021-03-22 13:02:03.632 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48eb9836
[DEBUG] 2021-03-22 13:02:03.636 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@9e2ad91
[DEBUG] 2021-03-22 13:02:03.637 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@9e2ad91
[DEBUG] 2021-03-22 13:02:03.637 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@9e2ad91
[DEBUG] 2021-03-22 13:02:03.641 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@74dbb1ee
[DEBUG] 2021-03-22 13:02:03.641 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@74dbb1ee
[DEBUG] 2021-03-22 13:02:03.642 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@74dbb1ee
[DEBUG] 2021-03-22 13:02:03.647 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@618ad2aa
[DEBUG] 2021-03-22 13:02:03.653 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4867ab9f
[DEBUG] 2021-03-22 13:02:03.655 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@46c3a14d
[DEBUG] 2021-03-22 13:02:03.656 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@46c3a14d
[DEBUG] 2021-03-22 13:02:03.662 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@46c3a14d
[DEBUG] 2021-03-22 13:02:03.667 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1de0a46c
[DEBUG] 2021-03-22 13:02:03.667 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1de0a46c
[DEBUG] 2021-03-22 13:02:03.668 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1de0a46c
[DEBUG] 2021-03-22 13:02:03.669 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@54f4a7f0
[DEBUG] 2021-03-22 13:02:03.679 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5477a1ca
[DEBUG] 2021-03-22 13:02:03.688 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2184b4f4
[DEBUG] 2021-03-22 13:02:03.688 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2184b4f4
[DEBUG] 2021-03-22 13:02:03.694 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@316a598d
[DEBUG] 2021-03-22 13:02:03.710 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@778d82e9
[DEBUG] 2021-03-22 13:02:03.710 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@778d82e9
[DEBUG] 2021-03-22 13:02:03.718 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@700f518a
[DEBUG] 2021-03-22 13:02:03.719 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@700f518a
[DEBUG] 2021-03-22 13:02:03.725 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@260ff5b7
[DEBUG] 2021-03-22 13:02:03.727 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@319c3a25
[DEBUG] 2021-03-22 13:02:03.750 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3e17a0a1
[DEBUG] 2021-03-22 13:02:03.780 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@84487f4
[DEBUG] 2021-03-22 13:02:03.781 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@84487f4
[DEBUG] 2021-03-22 13:02:03.782 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1290c49
[DEBUG] 2021-03-22 13:02:03.785 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a9b9909
[DEBUG] 2021-03-22 13:02:03.786 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55d9b8f0
[DEBUG] 2021-03-22 13:02:03.786 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a518813
[DEBUG] 2021-03-22 13:02:03.787 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43d38654
[DEBUG] 2021-03-22 13:02:03.787 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75361cf6
[DEBUG] 2021-03-22 13:02:03.793 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d303498
[DEBUG] 2021-03-22 13:02:03.794 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6ba7383d
[DEBUG] 2021-03-22 13:02:03.936 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-22 13:02:03.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-22 13:02:03.941 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-22 13:02:03.942 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-22 13:02:03.947 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-22 13:02:03.951 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-22 13:02:03.952 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-22 13:02:03.959 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-22 13:02:03.960 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-22 13:02:03.964 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-22 13:02:03.964 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-22 13:02:03.965 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-22 13:02:03.965 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-22 13:02:03.970 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-22 13:02:03.976 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_BookCollection
[INFO ] 2021-03-22 13:02:03.977 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-22 13:02:03.981 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-22 13:02:04.507 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-22 13:02:04.867 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-22 13:02:04.889 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-03-22 13:02:04.889 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-22 13:02:05.124 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-22 13:02:05.206 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-22 13:02:05.352 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-22 13:02:05.529 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-22 13:02:05.568 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59b65dce] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1386313f]
[DEBUG] 2021-03-22 13:02:05.840 [main] AnnotationBinder - Binding entity from annotated class: entity.Author
[DEBUG] 2021-03-22 13:02:05.992 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:02:06.037 [main] EntityBinder - Import with entity name Author
[DEBUG] 2021-03-22 13:02:06.056 [main] EntityBinder - Bind entity entity.Author on table author
[DEBUG] 2021-03-22 13:02:06.205 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.219 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:02:06.233 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
[DEBUG] 2021-03-22 13:02:06.243 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:02:06.257 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:02:06.278 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:02:06.290 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.290 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-22 13:02:06.290 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:firstName]
[DEBUG] 2021-03-22 13:02:06.294 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-22 13:02:06.294 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-22 13:02:06.294 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.296 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-22 13:02:06.296 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Author:lastName]
[DEBUG] 2021-03-22 13:02:06.296 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-22 13:02:06.296 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-22 13:02:06.303 [main] AnnotationBinder - Binding entity from annotated class: entity.Book
[DEBUG] 2021-03-22 13:02:06.308 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:02:06.308 [main] EntityBinder - Import with entity name Book
[DEBUG] 2021-03-22 13:02:06.309 [main] EntityBinder - Bind entity entity.Book on table book
[DEBUG] 2021-03-22 13:02:06.326 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.331 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:02:06.331 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
[DEBUG] 2021-03-22 13:02:06.331 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:02:06.331 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:02:06.331 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:02:06.339 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-22 13:02:06.340 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.358 [main] PropertyBinder - Building property author
[DEBUG] 2021-03-22 13:02:06.364 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-22 13:02:06.364 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.365 [main] PropertyBinder - Building property genre
[DEBUG] 2021-03-22 13:02:06.365 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.366 [main] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-03-22 13:02:06.366 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:isbn]
[DEBUG] 2021-03-22 13:02:06.366 [main] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-03-22 13:02:06.366 [main] PropertyBinder - Building property isbn
[DEBUG] 2021-03-22 13:02:06.366 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.366 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-03-22 13:02:06.366 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Book:title]
[DEBUG] 2021-03-22 13:02:06.366 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-03-22 13:02:06.367 [main] PropertyBinder - Building property title
[DEBUG] 2021-03-22 13:02:06.367 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-22 13:02:06.370 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.371 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-22 13:02:06.371 [main] AnnotationBinder - Binding entity from annotated class: entity.Genre
[DEBUG] 2021-03-22 13:02:06.371 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:02:06.371 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2021-03-22 13:02:06.371 [main] EntityBinder - Bind entity entity.Genre on table genre
[DEBUG] 2021-03-22 13:02:06.383 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.383 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:02:06.383 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:id]
[DEBUG] 2021-03-22 13:02:06.383 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:02:06.385 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:02:06.385 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:02:06.385 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.389 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-03-22 13:02:06.389 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Genre:name]
[DEBUG] 2021-03-22 13:02:06.389 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-03-22 13:02:06.390 [main] PropertyBinder - Building property name
[DEBUG] 2021-03-22 13:02:06.390 [main] AnnotationBinder - Binding entity from annotated class: entity.User
[DEBUG] 2021-03-22 13:02:06.390 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-22 13:02:06.390 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-03-22 13:02:06.391 [main] EntityBinder - Bind entity entity.User on table user
[DEBUG] 2021-03-22 13:02:06.394 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.394 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-22 13:02:06.396 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:id]
[DEBUG] 2021-03-22 13:02:06.396 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-22 13:02:06.396 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-22 13:02:06.396 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-22 13:02:06.401 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.402 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-03-22 13:02:06.403 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:email]
[DEBUG] 2021-03-22 13:02:06.403 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-03-22 13:02:06.403 [main] PropertyBinder - Building property email
[DEBUG] 2021-03-22 13:02:06.404 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.405 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-22 13:02:06.405 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:firstName]
[DEBUG] 2021-03-22 13:02:06.408 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-22 13:02:06.408 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-22 13:02:06.410 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.411 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-22 13:02:06.411 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:lastName]
[DEBUG] 2021-03-22 13:02:06.411 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-22 13:02:06.411 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-22 13:02:06.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.413 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-03-22 13:02:06.413 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:password]
[DEBUG] 2021-03-22 13:02:06.413 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-03-22 13:02:06.413 [main] PropertyBinder - Building property password
[DEBUG] 2021-03-22 13:02:06.423 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-22 13:02:06.423 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-03-22 13:02:06.423 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:userName]
[DEBUG] 2021-03-22 13:02:06.424 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-03-22 13:02:06.424 [main] PropertyBinder - Building property userName
[DEBUG] 2021-03-22 13:02:06.426 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:02:06.426 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-22 13:02:06.426 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-22 13:02:06.426 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:02:06.427 [main] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-03-22 13:02:06.428 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-03-22 13:02:06.432 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:02:06.432 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-03-22 13:02:06.432 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-22 13:02:06.432 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-03-22 13:02:06.438 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-22 13:02:06.439 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-22 13:02:06.439 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-03-22 13:02:06.440 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-03-22 13:02:06.517 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-03-22 13:02:06.521 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-03-22 13:02:06.521 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-03-22 13:02:06.522 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-03-22 13:02:06.523 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-22 13:02:06.545 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-22 13:02:06.547 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-22 13:02:06.558 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Author
[DEBUG] 2021-03-22 13:02:06.564 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Genre
[DEBUG] 2021-03-22 13:02:06.569 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2021-03-22 13:02:06.750 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-22 13:02:06.754 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-22 13:02:06.754 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-22 13:02:06.754 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-22 13:02:06.754 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-22 13:02:06.756 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-22 13:02:06.756 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-22 13:02:06.756 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-22 13:02:06.756 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-22 13:02:06.756 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-22 13:02:06.756 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-22 13:02:06.761 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-22 13:02:06.762 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-22 13:02:06.764 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-22 13:02:06.764 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-22 13:02:06.764 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-22 13:02:06.764 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-22 13:02:06.764 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-22 13:02:06.765 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-22 13:02:06.766 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-22 13:02:06.766 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-22 13:02:06.766 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-22 13:02:06.769 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-22 13:02:06.769 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-22 13:02:06.769 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-22 13:02:06.769 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-22 13:02:06.769 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-22 13:02:06.769 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-22 13:02:06.770 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-22 13:02:06.770 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-22 13:02:06.770 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-22 13:02:06.770 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-22 13:02:06.901 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-22 13:02:06.961 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-22 13:02:06.965 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/BookCollection/target/test-classes:/home/student/IdeaProjects/BookCollection/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/home/student/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/home/student/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/student/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/student/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 test.persistence.BookDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-01-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-67-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_BookCollection, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.10, user.dir=/home/student/IdeaProjects/BookCollection, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57efc6fd, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.10+9-Ubuntu-0ubuntu1.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_BookCollection, java.class.version=55.0}
[DEBUG] 2021-03-22 13:02:07.042 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-22 13:02:07.042 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-22 13:02:07.045 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-22 13:02:07.045 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59b65dce] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@115ca7de]
[DEBUG] 2021-03-22 13:02:07.248 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-22 13:02:07.249 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-22 13:02:07.314 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2021-03-22 13:02:07.314 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2021-03-22 13:02:08.444 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-22 13:02:08.445 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-22 13:02:08.446 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Genre] is safe
[DEBUG] 2021-03-22 13:02:08.446 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Genre
[DEBUG] 2021-03-22 13:02:08.500 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-22 13:02:08.505 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-22 13:02:08.506 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Author] is safe
[DEBUG] 2021-03-22 13:02:08.506 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
[DEBUG] 2021-03-22 13:02:08.599 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-22 13:02:08.599 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-22 13:02:08.603 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Book] is safe
[DEBUG] 2021-03-22 13:02:08.603 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
[DEBUG] 2021-03-22 13:02:08.740 [main] AbstractEntityPersister - Static SQL for entity: entity.User
[DEBUG] 2021-03-22 13:02:08.745 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-03-22 13:02:08.745 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_3_, user_.first_name as first_na3_3_, user_.last_name as last_nam4_3_, user_.password as password5_3_, user_.username as username6_3_ from user user_ where user_.id=?
[DEBUG] 2021-03-22 13:02:08.746 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:02:08.751 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-03-22 13:02:08.752 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-03-22 13:02:08.752 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:02:08.835 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8641b7d]
[DEBUG] 2021-03-22 13:02:08.837 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-22 13:02:08.837 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:02:08.837 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:02:08.837 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-22 13:02:08.837 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-22 13:02:08.837 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:08.857 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:08.865 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-22 13:02:08.871 [main] EntityLoader - Static select for entity entity.User [NONE]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:08.872 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ab1e67]
[DEBUG] 2021-03-22 13:02:08.873 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-03-22 13:02:08.873 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:02:08.873 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:02:08.873 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-22 13:02:08.873 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-22 13:02:08.873 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:08.874 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:08.889 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2021-03-22 13:02:08.889 [main] EntityLoader - Static select for entity entity.User [READ]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:09.016 [main] Loader - Static select for action ACTION_MERGE on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:09.034 [main] Loader - Static select for action ACTION_REFRESH on entity entity.User: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:09.034 [main] AbstractEntityPersister - Static SQL for entity: entity.Genre
[DEBUG] 2021-03-22 13:02:09.036 [main] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-03-22 13:02:09.036 [main] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-03-22 13:02:09.036 [main] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-03-22 13:02:09.036 [main] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-03-22 13:02:09.036 [main] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-03-22 13:02:09.036 [main] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-03-22 13:02:09.036 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eeb5818]
[DEBUG] 2021-03-22 13:02:09.037 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-22 13:02:09.037 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:09.037 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:09.044 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-22 13:02:09.054 [main] EntityLoader - Static select for entity entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:09.055 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58d4238e]
[DEBUG] 2021-03-22 13:02:09.055 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-03-22 13:02:09.055 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:09.056 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:09.056 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Genre)
    - Returns
       - EntityReturnImpl(entity=entity.Genre, querySpaceUid=<gen:0>, path=entity.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-03-22 13:02:09.073 [main] EntityLoader - Static select for entity entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:09.080 [main] Loader - Static select for action ACTION_MERGE on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:09.084 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:09.084 [main] AbstractEntityPersister - Static SQL for entity: entity.Author
[DEBUG] 2021-03-22 13:02:09.085 [main] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-03-22 13:02:09.085 [main] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2021-03-22 13:02:09.085 [main] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2021-03-22 13:02:09.087 [main] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2021-03-22 13:02:09.087 [main] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-03-22 13:02:09.087 [main] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2021-03-22 13:02:09.087 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36478bce]
[DEBUG] 2021-03-22 13:02:09.087 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:02:09.088 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:02:09.088 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:09.093 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:09.097 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-22 13:02:09.098 [main] EntityLoader - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:09.099 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75793f17]
[DEBUG] 2021-03-22 13:02:09.106 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-22 13:02:09.106 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-22 13:02:09.106 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:09.107 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:09.107 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-03-22 13:02:09.107 [main] EntityLoader - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:09.108 [main] Loader - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:09.116 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister - Static SQL for entity: entity.Book
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i4_1_, book_.genre_id as genre_id5_1_, book_.isbn as isbn2_1_, book_.title as title3_1_, book_.user_id as user_id6_1_ from book book_ where book_.id=?
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, title, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, title=?, user_id=? where id=?
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-03-22 13:02:09.116 [main] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, title, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-03-22 13:02:09.116 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc12db2]
[DEBUG] 2021-03-22 13:02:09.117 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-22 13:02:09.139 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cb6e0ee]
[DEBUG] 2021-03-22 13:02:09.141 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-22 13:02:09.141 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-22 13:02:09.147 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-22 13:02:09.147 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794240e2]
[DEBUG] 2021-03-22 13:02:09.148 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-22 13:02:09.150 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-22 13:02:09.153 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-22 13:02:09.153 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-22 13:02:09.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a30722c]
[DEBUG] 2021-03-22 13:02:09.154 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-22 13:02:09.154 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-22 13:02:09.154 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-22 13:02:09.154 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-22 13:02:09.154 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-22 13:02:09.155 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:09.155 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:09.158 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-22 13:02:09.159 [main] EntityLoader - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-22 13:02:09.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e8d066]
[DEBUG] 2021-03-22 13:02:09.160 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-03-22 13:02:09.161 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27898e13]
[DEBUG] 2021-03-22 13:02:09.161 [main] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2021-03-22 13:02:09.164 [main] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2021-03-22 13:02:09.165 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-03-22 13:02:09.165 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a3d521]
[DEBUG] 2021-03-22 13:02:09.165 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-03-22 13:02:09.165 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-03-22 13:02:09.165 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-03-22 13:02:09.165 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-22 13:02:09.166 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4a1cac]
[DEBUG] 2021-03-22 13:02:09.166 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-03-22 13:02:09.166 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-22 13:02:09.166 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-22 13:02:09.166 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-22 13:02:09.166 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-22 13:02:09.166 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-22 13:02:09.167 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-22 13:02:09.169 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
          - EntityAttributeFetchImpl(entity=entity.Author, querySpaceUid=<gen:1>, path=entity.Book.author)
          - EntityAttributeFetchImpl(entity=entity.Genre, querySpaceUid=<gen:2>, path=entity.Book.genre)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:3>, path=entity.Book.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

[DEBUG] 2021-03-22 13:02:09.170 [main] EntityLoader - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_3_3_, user3_.email as email2_3_3_, user3_.first_name as first_na3_3_3_, user3_.last_name as last_nam4_3_3_, user3_.password as password5_3_3_, user3_.username as username6_3_3_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id where book0_.id=?
[DEBUG] 2021-03-22 13:02:09.172 [main] Loader - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-22 13:02:09.179 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i4_1_0_, book0_.genre_id as genre_id5_1_0_, book0_.isbn as isbn2_1_0_, book0_.title as title3_1_0_, book0_.user_id as user_id6_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-03-22 13:02:09.240 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-22 13:02:09.240 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-22 13:02:09.241 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-22 13:02:09.252 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-22 13:02:09.252 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-22 13:02:09.253 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-22 13:02:09.253 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-22 13:02:09.261 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39449465
[DEBUG] 2021-03-22 13:02:09.265 [main] SessionFactoryRegistry - Registering SessionFactory: 677aa120-481c-4c8c-8147-10a2a7854e13 (<unnamed>)
[DEBUG] 2021-03-22 13:02:09.266 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-22 13:02:09.471 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-22 13:02:09.956 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2021-03-22 13:02:10.090 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@587f4f63
[DEBUG] 2021-03-22 13:02:10.237 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0
[DEBUG] 2021-03-22 13:02:10.262 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:02:10.318 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-22 13:02:10.405 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:02:10.453 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:02:10.458 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:02:10.460 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:02:10.470 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) )
[DEBUG] 2021-03-22 13:02:10.507 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:02:10.508 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:02:10.511 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}

[DEBUG] 2021-03-22 13:02:10.511 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:02:10.583 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0
[DEBUG] 2021-03-22 13:02:10.583 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-22 13:02:10.589 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:02:10.688 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_
[DEBUG] 2021-03-22 13:02:10.782 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:02:10.823 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:02:10.856 [main] Loader - Result set row: 1
[DEBUG] 2021-03-22 13:02:10.856 [main] Loader - Result row: EntityKey[entity.Book#2]
[DEBUG] 2021-03-22 13:02:10.857 [main] Loader - Result set row: 2
[DEBUG] 2021-03-22 13:02:10.865 [main] Loader - Result row: EntityKey[entity.Book#3]
[DEBUG] 2021-03-22 13:02:10.866 [main] Loader - Result set row: 3
[DEBUG] 2021-03-22 13:02:10.866 [main] Loader - Result row: EntityKey[entity.Book#4]
[DEBUG] 2021-03-22 13:02:10.868 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:02:10.870 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:02:10.879 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.884 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:10.896 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:10.899 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:10.902 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:02:10.903 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:02:10.903 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.903 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:02:10.903 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.904 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:02:10.905 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:10.909 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:02:10.909 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:02:10.910 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.913 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:10.922 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:10.923 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:10.923 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:02:10.923 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:02:10.923 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.923 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:02:10.923 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:10.923 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:02:10.924 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:02:10.924 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.924 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:02:10.924 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.924 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:02:10.924 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.934 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:10.937 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:10.937 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:10.938 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:02:10.941 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:02:10.941 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.941 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:02:10.941 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.941 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:02:10.942 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.942 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:02:10.942 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.942 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:02:10.942 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.949 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:02:10.951 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:10.951 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:02:10.952 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:02:10.952 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#2]
[DEBUG] 2021-03-22 13:02:10.952 [main] TwoPhaseLoad - Processing attribute `author` : value = 4
[DEBUG] 2021-03-22 13:02:10.957 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.958 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:10.962 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:10.963 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:10.970 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#4]
[DEBUG] 2021-03-22 13:02:10.970 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Brandon
[DEBUG] 2021-03-22 13:02:10.971 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.971 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sanderson
[DEBUG] 2021-03-22 13:02:10.971 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.971 [main] TwoPhaseLoad - Done materializing entity [entity.Author#4]
[DEBUG] 2021-03-22 13:02:10.972 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:10.972 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#4
[DEBUG] 2021-03-22 13:02:10.972 [main] TwoPhaseLoad - Processing attribute `genre` : value = 2
[DEBUG] 2021-03-22 13:02:10.972 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.972 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:10.981 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:10.981 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:10.984 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#2]
[DEBUG] 2021-03-22 13:02:10.984 [main] TwoPhaseLoad - Processing attribute `name` : value = Science Fiction
[DEBUG] 2021-03-22 13:02:10.984 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.985 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#2]
[DEBUG] 2021-03-22 13:02:10.985 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:10.989 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#2
[DEBUG] 2021-03-22 13:02:10.989 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0765365279
[DEBUG] 2021-03-22 13:02:10.989 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.989 [main] TwoPhaseLoad - Processing attribute `title` : value = The Way of Kings
[DEBUG] 2021-03-22 13:02:10.989 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.989 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-22 13:02:10.989 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:10.990 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:11.001 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:11.001 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:11.002 [main] TwoPhaseLoad - Resolving attributes for [entity.User#4]
[DEBUG] 2021-03-22 13:02:11.002 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:02:11.002 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.002 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.003 [main] TwoPhaseLoad - Done materializing entity [entity.User#4]
[DEBUG] 2021-03-22 13:02:11.003 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:11.004 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#4
[DEBUG] 2021-03-22 13:02:11.004 [main] TwoPhaseLoad - Done materializing entity [entity.Book#2]
[DEBUG] 2021-03-22 13:02:11.004 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#3]
[DEBUG] 2021-03-22 13:02:11.004 [main] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-03-22 13:02:11.004 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.004 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:11.022 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:11.022 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:11.031 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#5]
[DEBUG] 2021-03-22 13:02:11.033 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Nora
[DEBUG] 2021-03-22 13:02:11.033 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.034 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Roberts
[DEBUG] 2021-03-22 13:02:11.034 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.034 [main] TwoPhaseLoad - Done materializing entity [entity.Author#5]
[DEBUG] 2021-03-22 13:02:11.034 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:11.034 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#5
[DEBUG] 2021-03-22 13:02:11.034 [main] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-03-22 13:02:11.035 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.035 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:11.041 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:11.042 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:11.042 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#5]
[DEBUG] 2021-03-22 13:02:11.043 [main] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-03-22 13:02:11.043 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.043 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#5]
[DEBUG] 2021-03-22 13:02:11.043 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:11.043 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#5
[DEBUG] 2021-03-22 13:02:11.043 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0425259856
[DEBUG] 2021-03-22 13:02:11.044 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.044 [main] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-03-22 13:02:11.044 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.044 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:02:11.044 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.044 [main] TwoPhaseLoad - Done materializing entity [entity.Book#3]
[DEBUG] 2021-03-22 13:02:11.045 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#4]
[DEBUG] 2021-03-22 13:02:11.045 [main] TwoPhaseLoad - Processing attribute `author` : value = 3
[DEBUG] 2021-03-22 13:02:11.045 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.045 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:11.068 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:11.068 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:11.069 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#3]
[DEBUG] 2021-03-22 13:02:11.069 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Stephen
[DEBUG] 2021-03-22 13:02:11.069 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.069 [main] TwoPhaseLoad - Processing attribute `lastName` : value = King
[DEBUG] 2021-03-22 13:02:11.069 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.070 [main] TwoPhaseLoad - Done materializing entity [entity.Author#3]
[DEBUG] 2021-03-22 13:02:11.070 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:11.078 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#3
[DEBUG] 2021-03-22 13:02:11.083 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:02:11.083 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.083 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0743566575
[DEBUG] 2021-03-22 13:02:11.083 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.083 [main] TwoPhaseLoad - Processing attribute `title` : value = City of Bones
[DEBUG] 2021-03-22 13:02:11.088 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.088 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-22 13:02:11.088 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.088 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:11.098 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:11.098 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:11.098 [main] TwoPhaseLoad - Resolving attributes for [entity.User#2]
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:11.099 [main] TwoPhaseLoad - Done materializing entity [entity.User#2]
[DEBUG] 2021-03-22 13:02:11.105 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:11.105 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#2
[DEBUG] 2021-03-22 13:02:11.105 [main] TwoPhaseLoad - Done materializing entity [entity.Book#4]
[DEBUG] 2021-03-22 13:02:11.108 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-22 13:02:12.168 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-22 13:02:12.171 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-22 13:02:12.183 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:02:12.193 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-22 13:02:12.193 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-22 13:02:12.195 [main] FromElement - FromClause{level=1} : entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-03-22 13:02:12.196 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:02:12.203 [main] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-03-22 13:02:12.208 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@151ef57f
[DEBUG] 2021-03-22 13:02:12.215 [main] FromReferenceNode - Resolved : generatedAlias0.title -> book0_.title
[DEBUG] 2021-03-22 13:02:12.223 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-22 13:02:12.223 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
[DEBUG] 2021-03-22 13:02:12.224 [main] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-03-22 13:02:12.224 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-22 13:02:12.228 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@151ef57f}

[DEBUG] 2021-03-22 13:02:12.228 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:02:12.228 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Book as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2021-03-22 13:02:12.228 [main] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-22 13:02:12.229 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-22 13:02:12.256 [main] SQL - select book0_.id as id1_1_, book0_.author_id as author_i4_1_, book0_.genre_id as genre_id5_1_, book0_.isbn as isbn2_1_, book0_.title as title3_1_, book0_.user_id as user_id6_1_ from book book0_ where book0_.title like ?
[DEBUG] 2021-03-22 13:02:12.275 [main] Loader - Result set row: 0
[DEBUG] 2021-03-22 13:02:12.275 [main] Loader - Result row: EntityKey[entity.Book#1]
[DEBUG] 2021-03-22 13:02:12.276 [main] TwoPhaseLoad - Resolving attributes for [entity.Book#1]
[DEBUG] 2021-03-22 13:02:12.277 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-03-22 13:02:12.278 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.278 [main] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-03-22 13:02:12.284 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:12.284 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:12.285 [main] TwoPhaseLoad - Resolving attributes for [entity.Author#1]
[DEBUG] 2021-03-22 13:02:12.285 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Sarah J.
[DEBUG] 2021-03-22 13:02:12.289 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.289 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Maas
[DEBUG] 2021-03-22 13:02:12.289 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.289 [main] TwoPhaseLoad - Done materializing entity [entity.Author#1]
[DEBUG] 2021-03-22 13:02:12.289 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:12.290 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Author#1
[DEBUG] 2021-03-22 13:02:12.291 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-03-22 13:02:12.291 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.291 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-03-22 13:02:12.293 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:12.294 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:12.295 [main] TwoPhaseLoad - Resolving attributes for [entity.Genre#1]
[DEBUG] 2021-03-22 13:02:12.295 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-03-22 13:02:12.295 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.296 [main] TwoPhaseLoad - Done materializing entity [entity.Genre#1]
[DEBUG] 2021-03-22 13:02:12.296 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:12.296 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Genre#1
[DEBUG] 2021-03-22 13:02:12.298 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1408857861
[DEBUG] 2021-03-22 13:02:12.298 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.299 [main] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-03-22 13:02:12.299 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.299 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-22 13:02:12.299 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.299 [main] SQL - select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, user0_.password as password5_3_0_, user0_.username as username6_3_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-03-22 13:02:12.308 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-22 13:02:12.308 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-22 13:02:12.309 [main] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2021-03-22 13:02:12.309 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-03-22 13:02:12.309 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.309 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-03-22 13:02:12.309 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2021-03-22 13:02:12.310 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-22 13:02:12.310 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2021-03-22 13:02:12.310 [main] TwoPhaseLoad - Done materializing entity [entity.Book#1]
[DEBUG] 2021-03-22 13:02:12.311 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
